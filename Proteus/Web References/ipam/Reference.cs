//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace mod_proteus.ipam {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProteusAPIBinding", Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class ProteusAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addACLOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAliasRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addBulkHostRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomOptionDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCP4RangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCP4RangeBySizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCP6ClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCP6RangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCP6ServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPMatchClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPSubClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDHCPVendorDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDNSDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDNSDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeviceInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeviceSubtypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeviceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEnumNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEnumZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExternalHostRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGenericRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHINFORecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHostRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4BlockByCIDROperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4BlockByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4IPGroupByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4IPGroupBySizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4NetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4NetworkTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP4ReconciliationPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP6AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP6BlockByMACAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP6BlockByPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback addIP6NetworkByPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMACAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMXRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNAPTRRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addParentBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback addParentBlockWithPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addResourceRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addResponsePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSRVRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStartOfAuthorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTFTPDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTFTPFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTFTPFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTFTPGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTXTRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTagGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addVendorOptionDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addVendorProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback addViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback addZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback addZoneTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignIP6AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignNextAvailableIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignOrUpdateTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback associateMACAddressWithPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback breakXHAPairOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeStateIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearIP6AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback configureReplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback createXHAPairOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCP6ClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCP6ServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCPClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCPDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCPServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDHCPVendorDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDNSDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDNSDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDNSDeploymentRoleForViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDeviceInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback denyMACAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback deployServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deployServerConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback deployServerServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editXHAPairOperationCompleted;
        
        private System.Threading.SendOrPostCallback failoverXHAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessRightsForEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessRightsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAliasesByHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCP6ClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCP6ServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCPClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCPDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCPServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDHCPVendorDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDNSDeploymentRoleForViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDependentRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeploymentOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeploymentRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesByNameUsingOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityByCIDROperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityByPrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHostRecordsByHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIP4NetworksByHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIP6AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIPRangedByIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKSKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLinkedEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMACAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMACAddressesInPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMaxAllowedRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNetworkLinkedPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextAvailableIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextAvailableIP4NetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextAvailableIPRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextAvailableIPRangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextIP4AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerDeploymentRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerDeploymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDefinedFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZonesByHintOperationCompleted;
        
        private System.Threading.SendOrPostCallback importServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAddressAllocatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback isMigrationRunningOperationCompleted;
        
        private System.Threading.SendOrPostCallback linkEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback mergeBlocksWithParentOperationCompleted;
        
        private System.Threading.SendOrPostCallback mergeSelectedBlocksOrNetworksOperationCompleted;
        
        private System.Threading.SendOrPostCallback migrateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveDeploymentRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveIP4ObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveIPObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveResourceRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickDeployOperationCompleted;
        
        private System.Threading.SendOrPostCallback reapplyTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback reassignIP6AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback replaceServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback resizeRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByObjectTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback splitIP4NetworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback tagEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback unlinkEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback untagEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBulkUdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCP6ClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCP6ServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCPClientDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCPDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCPServiceDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDHCPVendorDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDNSDeploymentOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDNSDeploymentRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadResponsePolicyItemsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProteusAPI() {
            this.Url = global::mod_proteus.Properties.Settings.Default.Proteus_ipam_ProteusAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addACLCompletedEventHandler addACLCompleted;
        
        /// <remarks/>
        public event addAccessRightCompletedEventHandler addAccessRightCompleted;
        
        /// <remarks/>
        public event addAliasRecordCompletedEventHandler addAliasRecordCompleted;
        
        /// <remarks/>
        public event addBulkHostRecordCompletedEventHandler addBulkHostRecordCompleted;
        
        /// <remarks/>
        public event addCustomOptionDefinitionCompletedEventHandler addCustomOptionDefinitionCompleted;
        
        /// <remarks/>
        public event addDHCP4RangeCompletedEventHandler addDHCP4RangeCompleted;
        
        /// <remarks/>
        public event addDHCP4RangeBySizeCompletedEventHandler addDHCP4RangeBySizeCompleted;
        
        /// <remarks/>
        public event addDHCP6ClientDeploymentOptionCompletedEventHandler addDHCP6ClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDHCP6RangeCompletedEventHandler addDHCP6RangeCompleted;
        
        /// <remarks/>
        public event addDHCP6ServiceDeploymentOptionCompletedEventHandler addDHCP6ServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDHCPClientDeploymentOptionCompletedEventHandler addDHCPClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDHCPDeploymentRoleCompletedEventHandler addDHCPDeploymentRoleCompleted;
        
        /// <remarks/>
        public event addDHCPMatchClassCompletedEventHandler addDHCPMatchClassCompleted;
        
        /// <remarks/>
        public event addDHCPServiceDeploymentOptionCompletedEventHandler addDHCPServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDHCPSubClassCompletedEventHandler addDHCPSubClassCompleted;
        
        /// <remarks/>
        public event addDHCPVendorDeploymentOptionCompletedEventHandler addDHCPVendorDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDNSDeploymentOptionCompletedEventHandler addDNSDeploymentOptionCompleted;
        
        /// <remarks/>
        public event addDNSDeploymentRoleCompletedEventHandler addDNSDeploymentRoleCompleted;
        
        /// <remarks/>
        public event addDeviceCompletedEventHandler addDeviceCompleted;
        
        /// <remarks/>
        public event addDeviceInstanceCompletedEventHandler addDeviceInstanceCompleted;
        
        /// <remarks/>
        public event addDeviceSubtypeCompletedEventHandler addDeviceSubtypeCompleted;
        
        /// <remarks/>
        public event addDeviceTypeCompletedEventHandler addDeviceTypeCompleted;
        
        /// <remarks/>
        public event addEntityCompletedEventHandler addEntityCompleted;
        
        /// <remarks/>
        public event addEnumNumberCompletedEventHandler addEnumNumberCompleted;
        
        /// <remarks/>
        public event addEnumZoneCompletedEventHandler addEnumZoneCompleted;
        
        /// <remarks/>
        public event addExternalHostRecordCompletedEventHandler addExternalHostRecordCompleted;
        
        /// <remarks/>
        public event addGenericRecordCompletedEventHandler addGenericRecordCompleted;
        
        /// <remarks/>
        public event addHINFORecordCompletedEventHandler addHINFORecordCompleted;
        
        /// <remarks/>
        public event addHostRecordCompletedEventHandler addHostRecordCompleted;
        
        /// <remarks/>
        public event addIP4BlockByCIDRCompletedEventHandler addIP4BlockByCIDRCompleted;
        
        /// <remarks/>
        public event addIP4BlockByRangeCompletedEventHandler addIP4BlockByRangeCompleted;
        
        /// <remarks/>
        public event addIP4IPGroupByRangeCompletedEventHandler addIP4IPGroupByRangeCompleted;
        
        /// <remarks/>
        public event addIP4IPGroupBySizeCompletedEventHandler addIP4IPGroupBySizeCompleted;
        
        /// <remarks/>
        public event addIP4NetworkCompletedEventHandler addIP4NetworkCompleted;
        
        /// <remarks/>
        public event addIP4NetworkTemplateCompletedEventHandler addIP4NetworkTemplateCompleted;
        
        /// <remarks/>
        public event addIP4ReconciliationPolicyCompletedEventHandler addIP4ReconciliationPolicyCompleted;
        
        /// <remarks/>
        public event addIP6AddressCompletedEventHandler addIP6AddressCompleted;
        
        /// <remarks/>
        public event addIP6BlockByMACAddressCompletedEventHandler addIP6BlockByMACAddressCompleted;
        
        /// <remarks/>
        public event addIP6BlockByPrefixCompletedEventHandler addIP6BlockByPrefixCompleted;
        
        /// <remarks/>
        public event addIP6NetworkByPrefixCompletedEventHandler addIP6NetworkByPrefixCompleted;
        
        /// <remarks/>
        public event addMACAddressCompletedEventHandler addMACAddressCompleted;
        
        /// <remarks/>
        public event addMXRecordCompletedEventHandler addMXRecordCompleted;
        
        /// <remarks/>
        public event addNAPTRRecordCompletedEventHandler addNAPTRRecordCompleted;
        
        /// <remarks/>
        public event addParentBlockCompletedEventHandler addParentBlockCompleted;
        
        /// <remarks/>
        public event addParentBlockWithPropertiesCompletedEventHandler addParentBlockWithPropertiesCompleted;
        
        /// <remarks/>
        public event addResourceRecordCompletedEventHandler addResourceRecordCompleted;
        
        /// <remarks/>
        public event addResponsePolicyCompletedEventHandler addResponsePolicyCompleted;
        
        /// <remarks/>
        public event addSRVRecordCompletedEventHandler addSRVRecordCompleted;
        
        /// <remarks/>
        public event addServerCompletedEventHandler addServerCompleted;
        
        /// <remarks/>
        public event addStartOfAuthorityCompletedEventHandler addStartOfAuthorityCompleted;
        
        /// <remarks/>
        public event addTFTPDeploymentRoleCompletedEventHandler addTFTPDeploymentRoleCompleted;
        
        /// <remarks/>
        public event addTFTPFileCompletedEventHandler addTFTPFileCompleted;
        
        /// <remarks/>
        public event addTFTPFolderCompletedEventHandler addTFTPFolderCompleted;
        
        /// <remarks/>
        public event addTFTPGroupCompletedEventHandler addTFTPGroupCompleted;
        
        /// <remarks/>
        public event addTXTRecordCompletedEventHandler addTXTRecordCompleted;
        
        /// <remarks/>
        public event addTagCompletedEventHandler addTagCompleted;
        
        /// <remarks/>
        public event addTagGroupCompletedEventHandler addTagGroupCompleted;
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event addUserGroupCompletedEventHandler addUserGroupCompleted;
        
        /// <remarks/>
        public event addVendorOptionDefinitionCompletedEventHandler addVendorOptionDefinitionCompleted;
        
        /// <remarks/>
        public event addVendorProfileCompletedEventHandler addVendorProfileCompleted;
        
        /// <remarks/>
        public event addViewCompletedEventHandler addViewCompleted;
        
        /// <remarks/>
        public event addZoneCompletedEventHandler addZoneCompleted;
        
        /// <remarks/>
        public event addZoneTemplateCompletedEventHandler addZoneTemplateCompleted;
        
        /// <remarks/>
        public event assignIP4AddressCompletedEventHandler assignIP4AddressCompleted;
        
        /// <remarks/>
        public event assignIP6AddressCompletedEventHandler assignIP6AddressCompleted;
        
        /// <remarks/>
        public event assignNextAvailableIP4AddressCompletedEventHandler assignNextAvailableIP4AddressCompleted;
        
        /// <remarks/>
        public event assignOrUpdateTemplateCompletedEventHandler assignOrUpdateTemplateCompleted;
        
        /// <remarks/>
        public event associateMACAddressWithPoolCompletedEventHandler associateMACAddressWithPoolCompleted;
        
        /// <remarks/>
        public event breakXHAPairCompletedEventHandler breakXHAPairCompleted;
        
        /// <remarks/>
        public event changeStateIP4AddressCompletedEventHandler changeStateIP4AddressCompleted;
        
        /// <remarks/>
        public event clearIP6AddressCompletedEventHandler clearIP6AddressCompleted;
        
        /// <remarks/>
        public event configureReplicationCompletedEventHandler configureReplicationCompleted;
        
        /// <remarks/>
        public event createXHAPairCompletedEventHandler createXHAPairCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event deleteAccessRightCompletedEventHandler deleteAccessRightCompleted;
        
        /// <remarks/>
        public event deleteDHCP6ClientDeploymentOptionCompletedEventHandler deleteDHCP6ClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDHCP6ServiceDeploymentOptionCompletedEventHandler deleteDHCP6ServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDHCPClientDeploymentOptionCompletedEventHandler deleteDHCPClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDHCPDeploymentRoleCompletedEventHandler deleteDHCPDeploymentRoleCompleted;
        
        /// <remarks/>
        public event deleteDHCPServiceDeploymentOptionCompletedEventHandler deleteDHCPServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDHCPVendorDeploymentOptionCompletedEventHandler deleteDHCPVendorDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDNSDeploymentOptionCompletedEventHandler deleteDNSDeploymentOptionCompleted;
        
        /// <remarks/>
        public event deleteDNSDeploymentRoleCompletedEventHandler deleteDNSDeploymentRoleCompleted;
        
        /// <remarks/>
        public event deleteDNSDeploymentRoleForViewCompletedEventHandler deleteDNSDeploymentRoleForViewCompleted;
        
        /// <remarks/>
        public event deleteDeviceInstanceCompletedEventHandler deleteDeviceInstanceCompleted;
        
        /// <remarks/>
        public event deleteWithOptionsCompletedEventHandler deleteWithOptionsCompleted;
        
        /// <remarks/>
        public event denyMACAddressCompletedEventHandler denyMACAddressCompleted;
        
        /// <remarks/>
        public event deployServerCompletedEventHandler deployServerCompleted;
        
        /// <remarks/>
        public event deployServerConfigCompletedEventHandler deployServerConfigCompleted;
        
        /// <remarks/>
        public event deployServerServicesCompletedEventHandler deployServerServicesCompleted;
        
        /// <remarks/>
        public event editXHAPairCompletedEventHandler editXHAPairCompleted;
        
        /// <remarks/>
        public event failoverXHACompletedEventHandler failoverXHACompleted;
        
        /// <remarks/>
        public event getAccessRightCompletedEventHandler getAccessRightCompleted;
        
        /// <remarks/>
        public event getAccessRightsForEntityCompletedEventHandler getAccessRightsForEntityCompleted;
        
        /// <remarks/>
        public event getAccessRightsForUserCompletedEventHandler getAccessRightsForUserCompleted;
        
        /// <remarks/>
        public event getAliasesByHintCompletedEventHandler getAliasesByHintCompleted;
        
        /// <remarks/>
        public event getDHCP6ClientDeploymentOptionCompletedEventHandler getDHCP6ClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDHCP6ServiceDeploymentOptionCompletedEventHandler getDHCP6ServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDHCPClientDeploymentOptionCompletedEventHandler getDHCPClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDHCPDeploymentRoleCompletedEventHandler getDHCPDeploymentRoleCompleted;
        
        /// <remarks/>
        public event getDHCPServiceDeploymentOptionCompletedEventHandler getDHCPServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDHCPVendorDeploymentOptionCompletedEventHandler getDHCPVendorDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDNSDeploymentOptionCompletedEventHandler getDNSDeploymentOptionCompleted;
        
        /// <remarks/>
        public event getDNSDeploymentRoleCompletedEventHandler getDNSDeploymentRoleCompleted;
        
        /// <remarks/>
        public event getDNSDeploymentRoleForViewCompletedEventHandler getDNSDeploymentRoleForViewCompleted;
        
        /// <remarks/>
        public event getDependentRecordsCompletedEventHandler getDependentRecordsCompleted;
        
        /// <remarks/>
        public event getDeploymentOptionsCompletedEventHandler getDeploymentOptionsCompleted;
        
        /// <remarks/>
        public event getDeploymentRolesCompletedEventHandler getDeploymentRolesCompleted;
        
        /// <remarks/>
        public event getEntitiesCompletedEventHandler getEntitiesCompleted;
        
        /// <remarks/>
        public event getEntitiesByNameCompletedEventHandler getEntitiesByNameCompleted;
        
        /// <remarks/>
        public event getEntitiesByNameUsingOptionsCompletedEventHandler getEntitiesByNameUsingOptionsCompleted;
        
        /// <remarks/>
        public event getEntityByCIDRCompletedEventHandler getEntityByCIDRCompleted;
        
        /// <remarks/>
        public event getEntityByIdCompletedEventHandler getEntityByIdCompleted;
        
        /// <remarks/>
        public event getEntityByNameCompletedEventHandler getEntityByNameCompleted;
        
        /// <remarks/>
        public event getEntityByPrefixCompletedEventHandler getEntityByPrefixCompleted;
        
        /// <remarks/>
        public event getEntityByRangeCompletedEventHandler getEntityByRangeCompleted;
        
        /// <remarks/>
        public event getHostRecordsByHintCompletedEventHandler getHostRecordsByHintCompleted;
        
        /// <remarks/>
        public event getIP4AddressCompletedEventHandler getIP4AddressCompleted;
        
        /// <remarks/>
        public event getIP4NetworksByHintCompletedEventHandler getIP4NetworksByHintCompleted;
        
        /// <remarks/>
        public event getIP6AddressCompletedEventHandler getIP6AddressCompleted;
        
        /// <remarks/>
        public event getIPRangedByIPCompletedEventHandler getIPRangedByIPCompleted;
        
        /// <remarks/>
        public event getKSKCompletedEventHandler getKSKCompleted;
        
        /// <remarks/>
        public event getLinkedEntitiesCompletedEventHandler getLinkedEntitiesCompleted;
        
        /// <remarks/>
        public event getMACAddressCompletedEventHandler getMACAddressCompleted;
        
        /// <remarks/>
        public event getMACAddressesInPoolCompletedEventHandler getMACAddressesInPoolCompleted;
        
        /// <remarks/>
        public event getMaxAllowedRangeCompletedEventHandler getMaxAllowedRangeCompleted;
        
        /// <remarks/>
        public event getNetworkLinkedPropertiesCompletedEventHandler getNetworkLinkedPropertiesCompleted;
        
        /// <remarks/>
        public event getNextAvailableIP4AddressCompletedEventHandler getNextAvailableIP4AddressCompleted;
        
        /// <remarks/>
        public event getNextAvailableIP4NetworkCompletedEventHandler getNextAvailableIP4NetworkCompleted;
        
        /// <remarks/>
        public event getNextAvailableIPRangeCompletedEventHandler getNextAvailableIPRangeCompleted;
        
        /// <remarks/>
        public event getNextAvailableIPRangesCompletedEventHandler getNextAvailableIPRangesCompleted;
        
        /// <remarks/>
        public event getNextIP4AddressCompletedEventHandler getNextIP4AddressCompleted;
        
        /// <remarks/>
        public event getParentCompletedEventHandler getParentCompleted;
        
        /// <remarks/>
        public event getServerDeploymentRolesCompletedEventHandler getServerDeploymentRolesCompleted;
        
        /// <remarks/>
        public event getServerDeploymentStatusCompletedEventHandler getServerDeploymentStatusCompleted;
        
        /// <remarks/>
        public event getServerForRoleCompletedEventHandler getServerForRoleCompleted;
        
        /// <remarks/>
        public event getSystemInfoCompletedEventHandler getSystemInfoCompleted;
        
        /// <remarks/>
        public event getUserDefinedFieldsCompletedEventHandler getUserDefinedFieldsCompleted;
        
        /// <remarks/>
        public event getZonesByHintCompletedEventHandler getZonesByHintCompleted;
        
        /// <remarks/>
        public event importServerCompletedEventHandler importServerCompleted;
        
        /// <remarks/>
        public event isAddressAllocatedCompletedEventHandler isAddressAllocatedCompleted;
        
        /// <remarks/>
        public event isMigrationRunningCompletedEventHandler isMigrationRunningCompleted;
        
        /// <remarks/>
        public event linkEntitiesCompletedEventHandler linkEntitiesCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event mergeBlocksWithParentCompletedEventHandler mergeBlocksWithParentCompleted;
        
        /// <remarks/>
        public event mergeSelectedBlocksOrNetworksCompletedEventHandler mergeSelectedBlocksOrNetworksCompleted;
        
        /// <remarks/>
        public event migrateFileCompletedEventHandler migrateFileCompleted;
        
        /// <remarks/>
        public event moveDeploymentRolesCompletedEventHandler moveDeploymentRolesCompleted;
        
        /// <remarks/>
        public event moveIP4ObjectCompletedEventHandler moveIP4ObjectCompleted;
        
        /// <remarks/>
        public event moveIPObjectCompletedEventHandler moveIPObjectCompleted;
        
        /// <remarks/>
        public event moveResourceRecordCompletedEventHandler moveResourceRecordCompleted;
        
        /// <remarks/>
        public event quickDeployCompletedEventHandler quickDeployCompleted;
        
        /// <remarks/>
        public event reapplyTemplateCompletedEventHandler reapplyTemplateCompleted;
        
        /// <remarks/>
        public event reassignIP6AddressCompletedEventHandler reassignIP6AddressCompleted;
        
        /// <remarks/>
        public event replaceServerCompletedEventHandler replaceServerCompleted;
        
        /// <remarks/>
        public event resizeRangeCompletedEventHandler resizeRangeCompleted;
        
        /// <remarks/>
        public event searchByCategoryCompletedEventHandler searchByCategoryCompleted;
        
        /// <remarks/>
        public event searchByObjectTypesCompletedEventHandler searchByObjectTypesCompleted;
        
        /// <remarks/>
        public event splitIP4NetworkCompletedEventHandler splitIP4NetworkCompleted;
        
        /// <remarks/>
        public event tagEntityCompletedEventHandler tagEntityCompleted;
        
        /// <remarks/>
        public event unlinkEntitiesCompletedEventHandler unlinkEntitiesCompleted;
        
        /// <remarks/>
        public event untagEntityCompletedEventHandler untagEntityCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event updateAccessRightCompletedEventHandler updateAccessRightCompleted;
        
        /// <remarks/>
        public event updateBulkUdfCompletedEventHandler updateBulkUdfCompleted;
        
        /// <remarks/>
        public event updateDHCP6ClientDeploymentOptionCompletedEventHandler updateDHCP6ClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDHCP6ServiceDeploymentOptionCompletedEventHandler updateDHCP6ServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDHCPClientDeploymentOptionCompletedEventHandler updateDHCPClientDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDHCPDeploymentRoleCompletedEventHandler updateDHCPDeploymentRoleCompleted;
        
        /// <remarks/>
        public event updateDHCPServiceDeploymentOptionCompletedEventHandler updateDHCPServiceDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDHCPVendorDeploymentOptionCompletedEventHandler updateDHCPVendorDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDNSDeploymentOptionCompletedEventHandler updateDNSDeploymentOptionCompleted;
        
        /// <remarks/>
        public event updateDNSDeploymentRoleCompletedEventHandler updateDNSDeploymentRoleCompleted;
        
        /// <remarks/>
        public event updateWithOptionsCompletedEventHandler updateWithOptionsCompleted;
        
        /// <remarks/>
        public event uploadResponsePolicyItemsCompletedEventHandler uploadResponsePolicyItemsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addACL(long configurationId, string name, string properties) {
            object[] results = this.Invoke("addACL", new object[] {
                        configurationId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addACLAsync(long configurationId, string name, string properties) {
            this.addACLAsync(configurationId, name, properties, null);
        }
        
        /// <remarks/>
        public void addACLAsync(long configurationId, string name, string properties, object userState) {
            if ((this.addACLOperationCompleted == null)) {
                this.addACLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddACLOperationCompleted);
            }
            this.InvokeAsync("addACL", new object[] {
                        configurationId,
                        name,
                        properties}, this.addACLOperationCompleted, userState);
        }
        
        private void OnaddACLOperationCompleted(object arg) {
            if ((this.addACLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addACLCompleted(this, new addACLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addAccessRight(long entityId, long userId, string value, string overrides, string properties) {
            object[] results = this.Invoke("addAccessRight", new object[] {
                        entityId,
                        userId,
                        value,
                        overrides,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addAccessRightAsync(long entityId, long userId, string value, string overrides, string properties) {
            this.addAccessRightAsync(entityId, userId, value, overrides, properties, null);
        }
        
        /// <remarks/>
        public void addAccessRightAsync(long entityId, long userId, string value, string overrides, string properties, object userState) {
            if ((this.addAccessRightOperationCompleted == null)) {
                this.addAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAccessRightOperationCompleted);
            }
            this.InvokeAsync("addAccessRight", new object[] {
                        entityId,
                        userId,
                        value,
                        overrides,
                        properties}, this.addAccessRightOperationCompleted, userState);
        }
        
        private void OnaddAccessRightOperationCompleted(object arg) {
            if ((this.addAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAccessRightCompleted(this, new addAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addAliasRecord(long viewId, string absoluteName, string linkedRecordName, long ttl, string properties) {
            object[] results = this.Invoke("addAliasRecord", new object[] {
                        viewId,
                        absoluteName,
                        linkedRecordName,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addAliasRecordAsync(long viewId, string absoluteName, string linkedRecordName, long ttl, string properties) {
            this.addAliasRecordAsync(viewId, absoluteName, linkedRecordName, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addAliasRecordAsync(long viewId, string absoluteName, string linkedRecordName, long ttl, string properties, object userState) {
            if ((this.addAliasRecordOperationCompleted == null)) {
                this.addAliasRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAliasRecordOperationCompleted);
            }
            this.InvokeAsync("addAliasRecord", new object[] {
                        viewId,
                        absoluteName,
                        linkedRecordName,
                        ttl,
                        properties}, this.addAliasRecordOperationCompleted, userState);
        }
        
        private void OnaddAliasRecordOperationCompleted(object arg) {
            if ((this.addAliasRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAliasRecordCompleted(this, new addAliasRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] addBulkHostRecord(long viewId, string absoluteName, long ttl, long networkId, string startAddress, int numberOfAddresses, string properties) {
            object[] results = this.Invoke("addBulkHostRecord", new object[] {
                        viewId,
                        absoluteName,
                        ttl,
                        networkId,
                        startAddress,
                        numberOfAddresses,
                        properties});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void addBulkHostRecordAsync(long viewId, string absoluteName, long ttl, long networkId, string startAddress, int numberOfAddresses, string properties) {
            this.addBulkHostRecordAsync(viewId, absoluteName, ttl, networkId, startAddress, numberOfAddresses, properties, null);
        }
        
        /// <remarks/>
        public void addBulkHostRecordAsync(long viewId, string absoluteName, long ttl, long networkId, string startAddress, int numberOfAddresses, string properties, object userState) {
            if ((this.addBulkHostRecordOperationCompleted == null)) {
                this.addBulkHostRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBulkHostRecordOperationCompleted);
            }
            this.InvokeAsync("addBulkHostRecord", new object[] {
                        viewId,
                        absoluteName,
                        ttl,
                        networkId,
                        startAddress,
                        numberOfAddresses,
                        properties}, this.addBulkHostRecordOperationCompleted, userState);
        }
        
        private void OnaddBulkHostRecordOperationCompleted(object arg) {
            if ((this.addBulkHostRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBulkHostRecordCompleted(this, new addBulkHostRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addCustomOptionDefinition(long configurationId, string name, long optionId, string optionType, bool allowMultiple, string properties) {
            object[] results = this.Invoke("addCustomOptionDefinition", new object[] {
                        configurationId,
                        name,
                        optionId,
                        optionType,
                        allowMultiple,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomOptionDefinitionAsync(long configurationId, string name, long optionId, string optionType, bool allowMultiple, string properties) {
            this.addCustomOptionDefinitionAsync(configurationId, name, optionId, optionType, allowMultiple, properties, null);
        }
        
        /// <remarks/>
        public void addCustomOptionDefinitionAsync(long configurationId, string name, long optionId, string optionType, bool allowMultiple, string properties, object userState) {
            if ((this.addCustomOptionDefinitionOperationCompleted == null)) {
                this.addCustomOptionDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomOptionDefinitionOperationCompleted);
            }
            this.InvokeAsync("addCustomOptionDefinition", new object[] {
                        configurationId,
                        name,
                        optionId,
                        optionType,
                        allowMultiple,
                        properties}, this.addCustomOptionDefinitionOperationCompleted, userState);
        }
        
        private void OnaddCustomOptionDefinitionOperationCompleted(object arg) {
            if ((this.addCustomOptionDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomOptionDefinitionCompleted(this, new addCustomOptionDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCP4Range(long networkId, string start, string end, string properties) {
            object[] results = this.Invoke("addDHCP4Range", new object[] {
                        networkId,
                        start,
                        end,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCP4RangeAsync(long networkId, string start, string end, string properties) {
            this.addDHCP4RangeAsync(networkId, start, end, properties, null);
        }
        
        /// <remarks/>
        public void addDHCP4RangeAsync(long networkId, string start, string end, string properties, object userState) {
            if ((this.addDHCP4RangeOperationCompleted == null)) {
                this.addDHCP4RangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCP4RangeOperationCompleted);
            }
            this.InvokeAsync("addDHCP4Range", new object[] {
                        networkId,
                        start,
                        end,
                        properties}, this.addDHCP4RangeOperationCompleted, userState);
        }
        
        private void OnaddDHCP4RangeOperationCompleted(object arg) {
            if ((this.addDHCP4RangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCP4RangeCompleted(this, new addDHCP4RangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCP4RangeBySize(long networkId, string offset, string size, string properties) {
            object[] results = this.Invoke("addDHCP4RangeBySize", new object[] {
                        networkId,
                        offset,
                        size,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCP4RangeBySizeAsync(long networkId, string offset, string size, string properties) {
            this.addDHCP4RangeBySizeAsync(networkId, offset, size, properties, null);
        }
        
        /// <remarks/>
        public void addDHCP4RangeBySizeAsync(long networkId, string offset, string size, string properties, object userState) {
            if ((this.addDHCP4RangeBySizeOperationCompleted == null)) {
                this.addDHCP4RangeBySizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCP4RangeBySizeOperationCompleted);
            }
            this.InvokeAsync("addDHCP4RangeBySize", new object[] {
                        networkId,
                        offset,
                        size,
                        properties}, this.addDHCP4RangeBySizeOperationCompleted, userState);
        }
        
        private void OnaddDHCP4RangeBySizeOperationCompleted(object arg) {
            if ((this.addDHCP4RangeBySizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCP4RangeBySizeCompleted(this, new addDHCP4RangeBySizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCP6ClientDeploymentOption(long entityId, string name, string value, string properties) {
            object[] results = this.Invoke("addDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCP6ClientDeploymentOptionAsync(long entityId, string name, string value, string properties) {
            this.addDHCP6ClientDeploymentOptionAsync(entityId, name, value, properties, null);
        }
        
        /// <remarks/>
        public void addDHCP6ClientDeploymentOptionAsync(long entityId, string name, string value, string properties, object userState) {
            if ((this.addDHCP6ClientDeploymentOptionOperationCompleted == null)) {
                this.addDHCP6ClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCP6ClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties}, this.addDHCP6ClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDHCP6ClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDHCP6ClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCP6ClientDeploymentOptionCompleted(this, new addDHCP6ClientDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCP6Range(long networkId, string start, string end, string properties) {
            object[] results = this.Invoke("addDHCP6Range", new object[] {
                        networkId,
                        start,
                        end,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCP6RangeAsync(long networkId, string start, string end, string properties) {
            this.addDHCP6RangeAsync(networkId, start, end, properties, null);
        }
        
        /// <remarks/>
        public void addDHCP6RangeAsync(long networkId, string start, string end, string properties, object userState) {
            if ((this.addDHCP6RangeOperationCompleted == null)) {
                this.addDHCP6RangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCP6RangeOperationCompleted);
            }
            this.InvokeAsync("addDHCP6Range", new object[] {
                        networkId,
                        start,
                        end,
                        properties}, this.addDHCP6RangeOperationCompleted, userState);
        }
        
        private void OnaddDHCP6RangeOperationCompleted(object arg) {
            if ((this.addDHCP6RangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCP6RangeCompleted(this, new addDHCP6RangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCP6ServiceDeploymentOption(long entityId, string name, string value, string properties) {
            object[] results = this.Invoke("addDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCP6ServiceDeploymentOptionAsync(long entityId, string name, string value, string properties) {
            this.addDHCP6ServiceDeploymentOptionAsync(entityId, name, value, properties, null);
        }
        
        /// <remarks/>
        public void addDHCP6ServiceDeploymentOptionAsync(long entityId, string name, string value, string properties, object userState) {
            if ((this.addDHCP6ServiceDeploymentOptionOperationCompleted == null)) {
                this.addDHCP6ServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCP6ServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties}, this.addDHCP6ServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDHCP6ServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDHCP6ServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCP6ServiceDeploymentOptionCompleted(this, new addDHCP6ServiceDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPClientDeploymentOption(long entityId, string name, string value, string properties) {
            object[] results = this.Invoke("addDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPClientDeploymentOptionAsync(long entityId, string name, string value, string properties) {
            this.addDHCPClientDeploymentOptionAsync(entityId, name, value, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPClientDeploymentOptionAsync(long entityId, string name, string value, string properties, object userState) {
            if ((this.addDHCPClientDeploymentOptionOperationCompleted == null)) {
                this.addDHCPClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties}, this.addDHCPClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDHCPClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDHCPClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPClientDeploymentOptionCompleted(this, new addDHCPClientDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPDeploymentRole(long entityId, long serverInterfaceId, string type, string properties) {
            object[] results = this.Invoke("addDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId,
                        type,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId, string type, string properties) {
            this.addDHCPDeploymentRoleAsync(entityId, serverInterfaceId, type, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId, string type, string properties, object userState) {
            if ((this.addDHCPDeploymentRoleOperationCompleted == null)) {
                this.addDHCPDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("addDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId,
                        type,
                        properties}, this.addDHCPDeploymentRoleOperationCompleted, userState);
        }
        
        private void OnaddDHCPDeploymentRoleOperationCompleted(object arg) {
            if ((this.addDHCPDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPDeploymentRoleCompleted(this, new addDHCPDeploymentRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPMatchClass(long configurationId, string name, string matchCriteria, string properties) {
            object[] results = this.Invoke("addDHCPMatchClass", new object[] {
                        configurationId,
                        name,
                        matchCriteria,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPMatchClassAsync(long configurationId, string name, string matchCriteria, string properties) {
            this.addDHCPMatchClassAsync(configurationId, name, matchCriteria, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPMatchClassAsync(long configurationId, string name, string matchCriteria, string properties, object userState) {
            if ((this.addDHCPMatchClassOperationCompleted == null)) {
                this.addDHCPMatchClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPMatchClassOperationCompleted);
            }
            this.InvokeAsync("addDHCPMatchClass", new object[] {
                        configurationId,
                        name,
                        matchCriteria,
                        properties}, this.addDHCPMatchClassOperationCompleted, userState);
        }
        
        private void OnaddDHCPMatchClassOperationCompleted(object arg) {
            if ((this.addDHCPMatchClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPMatchClassCompleted(this, new addDHCPMatchClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPServiceDeploymentOption(long entityId, string name, string value, string properties) {
            object[] results = this.Invoke("addDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPServiceDeploymentOptionAsync(long entityId, string name, string value, string properties) {
            this.addDHCPServiceDeploymentOptionAsync(entityId, name, value, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPServiceDeploymentOptionAsync(long entityId, string name, string value, string properties, object userState) {
            if ((this.addDHCPServiceDeploymentOptionOperationCompleted == null)) {
                this.addDHCPServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties}, this.addDHCPServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDHCPServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDHCPServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPServiceDeploymentOptionCompleted(this, new addDHCPServiceDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPSubClass(long matchClassId, string matchValue, string properties) {
            object[] results = this.Invoke("addDHCPSubClass", new object[] {
                        matchClassId,
                        matchValue,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPSubClassAsync(long matchClassId, string matchValue, string properties) {
            this.addDHCPSubClassAsync(matchClassId, matchValue, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPSubClassAsync(long matchClassId, string matchValue, string properties, object userState) {
            if ((this.addDHCPSubClassOperationCompleted == null)) {
                this.addDHCPSubClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPSubClassOperationCompleted);
            }
            this.InvokeAsync("addDHCPSubClass", new object[] {
                        matchClassId,
                        matchValue,
                        properties}, this.addDHCPSubClassOperationCompleted, userState);
        }
        
        private void OnaddDHCPSubClassOperationCompleted(object arg) {
            if ((this.addDHCPSubClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPSubClassCompleted(this, new addDHCPSubClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDHCPVendorDeploymentOption(long parentId, long optionId, string value, string properties) {
            object[] results = this.Invoke("addDHCPVendorDeploymentOption", new object[] {
                        parentId,
                        optionId,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDHCPVendorDeploymentOptionAsync(long parentId, long optionId, string value, string properties) {
            this.addDHCPVendorDeploymentOptionAsync(parentId, optionId, value, properties, null);
        }
        
        /// <remarks/>
        public void addDHCPVendorDeploymentOptionAsync(long parentId, long optionId, string value, string properties, object userState) {
            if ((this.addDHCPVendorDeploymentOptionOperationCompleted == null)) {
                this.addDHCPVendorDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDHCPVendorDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDHCPVendorDeploymentOption", new object[] {
                        parentId,
                        optionId,
                        value,
                        properties}, this.addDHCPVendorDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDHCPVendorDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDHCPVendorDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDHCPVendorDeploymentOptionCompleted(this, new addDHCPVendorDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDNSDeploymentOption(long entityId, string name, string value, string properties) {
            object[] results = this.Invoke("addDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDNSDeploymentOptionAsync(long entityId, string name, string value, string properties) {
            this.addDNSDeploymentOptionAsync(entityId, name, value, properties, null);
        }
        
        /// <remarks/>
        public void addDNSDeploymentOptionAsync(long entityId, string name, string value, string properties, object userState) {
            if ((this.addDNSDeploymentOptionOperationCompleted == null)) {
                this.addDNSDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDNSDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("addDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        value,
                        properties}, this.addDNSDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnaddDNSDeploymentOptionOperationCompleted(object arg) {
            if ((this.addDNSDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDNSDeploymentOptionCompleted(this, new addDNSDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDNSDeploymentRole(long entityId, long serverInterfaceId, string type, string properties) {
            object[] results = this.Invoke("addDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId,
                        type,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDNSDeploymentRoleAsync(long entityId, long serverInterfaceId, string type, string properties) {
            this.addDNSDeploymentRoleAsync(entityId, serverInterfaceId, type, properties, null);
        }
        
        /// <remarks/>
        public void addDNSDeploymentRoleAsync(long entityId, long serverInterfaceId, string type, string properties, object userState) {
            if ((this.addDNSDeploymentRoleOperationCompleted == null)) {
                this.addDNSDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDNSDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("addDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId,
                        type,
                        properties}, this.addDNSDeploymentRoleOperationCompleted, userState);
        }
        
        private void OnaddDNSDeploymentRoleOperationCompleted(object arg) {
            if ((this.addDNSDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDNSDeploymentRoleCompleted(this, new addDNSDeploymentRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDevice(long configurationId, string name, long deviceTypeId, long deviceSubtypeId, string ip4Addresses, string ip6Addresses, string properties) {
            object[] results = this.Invoke("addDevice", new object[] {
                        configurationId,
                        name,
                        deviceTypeId,
                        deviceSubtypeId,
                        ip4Addresses,
                        ip6Addresses,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDeviceAsync(long configurationId, string name, long deviceTypeId, long deviceSubtypeId, string ip4Addresses, string ip6Addresses, string properties) {
            this.addDeviceAsync(configurationId, name, deviceTypeId, deviceSubtypeId, ip4Addresses, ip6Addresses, properties, null);
        }
        
        /// <remarks/>
        public void addDeviceAsync(long configurationId, string name, long deviceTypeId, long deviceSubtypeId, string ip4Addresses, string ip6Addresses, string properties, object userState) {
            if ((this.addDeviceOperationCompleted == null)) {
                this.addDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeviceOperationCompleted);
            }
            this.InvokeAsync("addDevice", new object[] {
                        configurationId,
                        name,
                        deviceTypeId,
                        deviceSubtypeId,
                        ip4Addresses,
                        ip6Addresses,
                        properties}, this.addDeviceOperationCompleted, userState);
        }
        
        private void OnaddDeviceOperationCompleted(object arg) {
            if ((this.addDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeviceCompleted(this, new addDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addDeviceInstance(string configName, string deviceName, string ipAddressMode, string ipEntity, string viewName, string zoneName, string recordName, string macAddressMode, string macEntity, string options) {
            object[] results = this.Invoke("addDeviceInstance", new object[] {
                        configName,
                        deviceName,
                        ipAddressMode,
                        ipEntity,
                        viewName,
                        zoneName,
                        recordName,
                        macAddressMode,
                        macEntity,
                        options});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDeviceInstanceAsync(string configName, string deviceName, string ipAddressMode, string ipEntity, string viewName, string zoneName, string recordName, string macAddressMode, string macEntity, string options) {
            this.addDeviceInstanceAsync(configName, deviceName, ipAddressMode, ipEntity, viewName, zoneName, recordName, macAddressMode, macEntity, options, null);
        }
        
        /// <remarks/>
        public void addDeviceInstanceAsync(string configName, string deviceName, string ipAddressMode, string ipEntity, string viewName, string zoneName, string recordName, string macAddressMode, string macEntity, string options, object userState) {
            if ((this.addDeviceInstanceOperationCompleted == null)) {
                this.addDeviceInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeviceInstanceOperationCompleted);
            }
            this.InvokeAsync("addDeviceInstance", new object[] {
                        configName,
                        deviceName,
                        ipAddressMode,
                        ipEntity,
                        viewName,
                        zoneName,
                        recordName,
                        macAddressMode,
                        macEntity,
                        options}, this.addDeviceInstanceOperationCompleted, userState);
        }
        
        private void OnaddDeviceInstanceOperationCompleted(object arg) {
            if ((this.addDeviceInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeviceInstanceCompleted(this, new addDeviceInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDeviceSubtype(long parentId, string name, string properties) {
            object[] results = this.Invoke("addDeviceSubtype", new object[] {
                        parentId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDeviceSubtypeAsync(long parentId, string name, string properties) {
            this.addDeviceSubtypeAsync(parentId, name, properties, null);
        }
        
        /// <remarks/>
        public void addDeviceSubtypeAsync(long parentId, string name, string properties, object userState) {
            if ((this.addDeviceSubtypeOperationCompleted == null)) {
                this.addDeviceSubtypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeviceSubtypeOperationCompleted);
            }
            this.InvokeAsync("addDeviceSubtype", new object[] {
                        parentId,
                        name,
                        properties}, this.addDeviceSubtypeOperationCompleted, userState);
        }
        
        private void OnaddDeviceSubtypeOperationCompleted(object arg) {
            if ((this.addDeviceSubtypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeviceSubtypeCompleted(this, new addDeviceSubtypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addDeviceType(string name, string properties) {
            object[] results = this.Invoke("addDeviceType", new object[] {
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addDeviceTypeAsync(string name, string properties) {
            this.addDeviceTypeAsync(name, properties, null);
        }
        
        /// <remarks/>
        public void addDeviceTypeAsync(string name, string properties, object userState) {
            if ((this.addDeviceTypeOperationCompleted == null)) {
                this.addDeviceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeviceTypeOperationCompleted);
            }
            this.InvokeAsync("addDeviceType", new object[] {
                        name,
                        properties}, this.addDeviceTypeOperationCompleted, userState);
        }
        
        private void OnaddDeviceTypeOperationCompleted(object arg) {
            if ((this.addDeviceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeviceTypeCompleted(this, new addDeviceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addEntity(long parentId, APIEntity entity) {
            object[] results = this.Invoke("addEntity", new object[] {
                        parentId,
                        entity});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addEntityAsync(long parentId, APIEntity entity) {
            this.addEntityAsync(parentId, entity, null);
        }
        
        /// <remarks/>
        public void addEntityAsync(long parentId, APIEntity entity, object userState) {
            if ((this.addEntityOperationCompleted == null)) {
                this.addEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEntityOperationCompleted);
            }
            this.InvokeAsync("addEntity", new object[] {
                        parentId,
                        entity}, this.addEntityOperationCompleted, userState);
        }
        
        private void OnaddEntityOperationCompleted(object arg) {
            if ((this.addEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEntityCompleted(this, new addEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addEnumNumber(long enumZoneId, int number, string properties) {
            object[] results = this.Invoke("addEnumNumber", new object[] {
                        enumZoneId,
                        number,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addEnumNumberAsync(long enumZoneId, int number, string properties) {
            this.addEnumNumberAsync(enumZoneId, number, properties, null);
        }
        
        /// <remarks/>
        public void addEnumNumberAsync(long enumZoneId, int number, string properties, object userState) {
            if ((this.addEnumNumberOperationCompleted == null)) {
                this.addEnumNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEnumNumberOperationCompleted);
            }
            this.InvokeAsync("addEnumNumber", new object[] {
                        enumZoneId,
                        number,
                        properties}, this.addEnumNumberOperationCompleted, userState);
        }
        
        private void OnaddEnumNumberOperationCompleted(object arg) {
            if ((this.addEnumNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEnumNumberCompleted(this, new addEnumNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addEnumZone(long parentId, int prefix, string properties) {
            object[] results = this.Invoke("addEnumZone", new object[] {
                        parentId,
                        prefix,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addEnumZoneAsync(long parentId, int prefix, string properties) {
            this.addEnumZoneAsync(parentId, prefix, properties, null);
        }
        
        /// <remarks/>
        public void addEnumZoneAsync(long parentId, int prefix, string properties, object userState) {
            if ((this.addEnumZoneOperationCompleted == null)) {
                this.addEnumZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEnumZoneOperationCompleted);
            }
            this.InvokeAsync("addEnumZone", new object[] {
                        parentId,
                        prefix,
                        properties}, this.addEnumZoneOperationCompleted, userState);
        }
        
        private void OnaddEnumZoneOperationCompleted(object arg) {
            if ((this.addEnumZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEnumZoneCompleted(this, new addEnumZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addExternalHostRecord(long viewId, string name, string properties) {
            object[] results = this.Invoke("addExternalHostRecord", new object[] {
                        viewId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addExternalHostRecordAsync(long viewId, string name, string properties) {
            this.addExternalHostRecordAsync(viewId, name, properties, null);
        }
        
        /// <remarks/>
        public void addExternalHostRecordAsync(long viewId, string name, string properties, object userState) {
            if ((this.addExternalHostRecordOperationCompleted == null)) {
                this.addExternalHostRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExternalHostRecordOperationCompleted);
            }
            this.InvokeAsync("addExternalHostRecord", new object[] {
                        viewId,
                        name,
                        properties}, this.addExternalHostRecordOperationCompleted, userState);
        }
        
        private void OnaddExternalHostRecordOperationCompleted(object arg) {
            if ((this.addExternalHostRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExternalHostRecordCompleted(this, new addExternalHostRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addGenericRecord(long viewId, string absoluteName, string type, string rdata, long ttl, string properties) {
            object[] results = this.Invoke("addGenericRecord", new object[] {
                        viewId,
                        absoluteName,
                        type,
                        rdata,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addGenericRecordAsync(long viewId, string absoluteName, string type, string rdata, long ttl, string properties) {
            this.addGenericRecordAsync(viewId, absoluteName, type, rdata, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addGenericRecordAsync(long viewId, string absoluteName, string type, string rdata, long ttl, string properties, object userState) {
            if ((this.addGenericRecordOperationCompleted == null)) {
                this.addGenericRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGenericRecordOperationCompleted);
            }
            this.InvokeAsync("addGenericRecord", new object[] {
                        viewId,
                        absoluteName,
                        type,
                        rdata,
                        ttl,
                        properties}, this.addGenericRecordOperationCompleted, userState);
        }
        
        private void OnaddGenericRecordOperationCompleted(object arg) {
            if ((this.addGenericRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGenericRecordCompleted(this, new addGenericRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addHINFORecord(long viewId, string absoluteName, string cpu, string os, long ttl, string properties) {
            object[] results = this.Invoke("addHINFORecord", new object[] {
                        viewId,
                        absoluteName,
                        cpu,
                        os,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addHINFORecordAsync(long viewId, string absoluteName, string cpu, string os, long ttl, string properties) {
            this.addHINFORecordAsync(viewId, absoluteName, cpu, os, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addHINFORecordAsync(long viewId, string absoluteName, string cpu, string os, long ttl, string properties, object userState) {
            if ((this.addHINFORecordOperationCompleted == null)) {
                this.addHINFORecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHINFORecordOperationCompleted);
            }
            this.InvokeAsync("addHINFORecord", new object[] {
                        viewId,
                        absoluteName,
                        cpu,
                        os,
                        ttl,
                        properties}, this.addHINFORecordOperationCompleted, userState);
        }
        
        private void OnaddHINFORecordOperationCompleted(object arg) {
            if ((this.addHINFORecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHINFORecordCompleted(this, new addHINFORecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addHostRecord(long viewId, string absoluteName, string addresses, long ttl, string properties) {
            object[] results = this.Invoke("addHostRecord", new object[] {
                        viewId,
                        absoluteName,
                        addresses,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addHostRecordAsync(long viewId, string absoluteName, string addresses, long ttl, string properties) {
            this.addHostRecordAsync(viewId, absoluteName, addresses, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addHostRecordAsync(long viewId, string absoluteName, string addresses, long ttl, string properties, object userState) {
            if ((this.addHostRecordOperationCompleted == null)) {
                this.addHostRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHostRecordOperationCompleted);
            }
            this.InvokeAsync("addHostRecord", new object[] {
                        viewId,
                        absoluteName,
                        addresses,
                        ttl,
                        properties}, this.addHostRecordOperationCompleted, userState);
        }
        
        private void OnaddHostRecordOperationCompleted(object arg) {
            if ((this.addHostRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHostRecordCompleted(this, new addHostRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4BlockByCIDR(long parentId, string CIDR, string properties) {
            object[] results = this.Invoke("addIP4BlockByCIDR", new object[] {
                        parentId,
                        CIDR,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4BlockByCIDRAsync(long parentId, string CIDR, string properties) {
            this.addIP4BlockByCIDRAsync(parentId, CIDR, properties, null);
        }
        
        /// <remarks/>
        public void addIP4BlockByCIDRAsync(long parentId, string CIDR, string properties, object userState) {
            if ((this.addIP4BlockByCIDROperationCompleted == null)) {
                this.addIP4BlockByCIDROperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4BlockByCIDROperationCompleted);
            }
            this.InvokeAsync("addIP4BlockByCIDR", new object[] {
                        parentId,
                        CIDR,
                        properties}, this.addIP4BlockByCIDROperationCompleted, userState);
        }
        
        private void OnaddIP4BlockByCIDROperationCompleted(object arg) {
            if ((this.addIP4BlockByCIDRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4BlockByCIDRCompleted(this, new addIP4BlockByCIDRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4BlockByRange(long parentId, string start, string end, string properties) {
            object[] results = this.Invoke("addIP4BlockByRange", new object[] {
                        parentId,
                        start,
                        end,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4BlockByRangeAsync(long parentId, string start, string end, string properties) {
            this.addIP4BlockByRangeAsync(parentId, start, end, properties, null);
        }
        
        /// <remarks/>
        public void addIP4BlockByRangeAsync(long parentId, string start, string end, string properties, object userState) {
            if ((this.addIP4BlockByRangeOperationCompleted == null)) {
                this.addIP4BlockByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4BlockByRangeOperationCompleted);
            }
            this.InvokeAsync("addIP4BlockByRange", new object[] {
                        parentId,
                        start,
                        end,
                        properties}, this.addIP4BlockByRangeOperationCompleted, userState);
        }
        
        private void OnaddIP4BlockByRangeOperationCompleted(object arg) {
            if ((this.addIP4BlockByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4BlockByRangeCompleted(this, new addIP4BlockByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4IPGroupByRange(long parentId, string name, string start, string end, string properties) {
            object[] results = this.Invoke("addIP4IPGroupByRange", new object[] {
                        parentId,
                        name,
                        start,
                        end,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4IPGroupByRangeAsync(long parentId, string name, string start, string end, string properties) {
            this.addIP4IPGroupByRangeAsync(parentId, name, start, end, properties, null);
        }
        
        /// <remarks/>
        public void addIP4IPGroupByRangeAsync(long parentId, string name, string start, string end, string properties, object userState) {
            if ((this.addIP4IPGroupByRangeOperationCompleted == null)) {
                this.addIP4IPGroupByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4IPGroupByRangeOperationCompleted);
            }
            this.InvokeAsync("addIP4IPGroupByRange", new object[] {
                        parentId,
                        name,
                        start,
                        end,
                        properties}, this.addIP4IPGroupByRangeOperationCompleted, userState);
        }
        
        private void OnaddIP4IPGroupByRangeOperationCompleted(object arg) {
            if ((this.addIP4IPGroupByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4IPGroupByRangeCompleted(this, new addIP4IPGroupByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4IPGroupBySize(long parentId, string name, int size, string positionRangeBy, string positionValue, string properties) {
            object[] results = this.Invoke("addIP4IPGroupBySize", new object[] {
                        parentId,
                        name,
                        size,
                        positionRangeBy,
                        positionValue,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4IPGroupBySizeAsync(long parentId, string name, int size, string positionRangeBy, string positionValue, string properties) {
            this.addIP4IPGroupBySizeAsync(parentId, name, size, positionRangeBy, positionValue, properties, null);
        }
        
        /// <remarks/>
        public void addIP4IPGroupBySizeAsync(long parentId, string name, int size, string positionRangeBy, string positionValue, string properties, object userState) {
            if ((this.addIP4IPGroupBySizeOperationCompleted == null)) {
                this.addIP4IPGroupBySizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4IPGroupBySizeOperationCompleted);
            }
            this.InvokeAsync("addIP4IPGroupBySize", new object[] {
                        parentId,
                        name,
                        size,
                        positionRangeBy,
                        positionValue,
                        properties}, this.addIP4IPGroupBySizeOperationCompleted, userState);
        }
        
        private void OnaddIP4IPGroupBySizeOperationCompleted(object arg) {
            if ((this.addIP4IPGroupBySizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4IPGroupBySizeCompleted(this, new addIP4IPGroupBySizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4Network(long blockId, string CIDR, string properties) {
            object[] results = this.Invoke("addIP4Network", new object[] {
                        blockId,
                        CIDR,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4NetworkAsync(long blockId, string CIDR, string properties) {
            this.addIP4NetworkAsync(blockId, CIDR, properties, null);
        }
        
        /// <remarks/>
        public void addIP4NetworkAsync(long blockId, string CIDR, string properties, object userState) {
            if ((this.addIP4NetworkOperationCompleted == null)) {
                this.addIP4NetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4NetworkOperationCompleted);
            }
            this.InvokeAsync("addIP4Network", new object[] {
                        blockId,
                        CIDR,
                        properties}, this.addIP4NetworkOperationCompleted, userState);
        }
        
        private void OnaddIP4NetworkOperationCompleted(object arg) {
            if ((this.addIP4NetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4NetworkCompleted(this, new addIP4NetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4NetworkTemplate(long configurationId, string name, string properties) {
            object[] results = this.Invoke("addIP4NetworkTemplate", new object[] {
                        configurationId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4NetworkTemplateAsync(long configurationId, string name, string properties) {
            this.addIP4NetworkTemplateAsync(configurationId, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP4NetworkTemplateAsync(long configurationId, string name, string properties, object userState) {
            if ((this.addIP4NetworkTemplateOperationCompleted == null)) {
                this.addIP4NetworkTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4NetworkTemplateOperationCompleted);
            }
            this.InvokeAsync("addIP4NetworkTemplate", new object[] {
                        configurationId,
                        name,
                        properties}, this.addIP4NetworkTemplateOperationCompleted, userState);
        }
        
        private void OnaddIP4NetworkTemplateOperationCompleted(object arg) {
            if ((this.addIP4NetworkTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4NetworkTemplateCompleted(this, new addIP4NetworkTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP4ReconciliationPolicy(long parentId, string name, string properties) {
            object[] results = this.Invoke("addIP4ReconciliationPolicy", new object[] {
                        parentId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP4ReconciliationPolicyAsync(long parentId, string name, string properties) {
            this.addIP4ReconciliationPolicyAsync(parentId, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP4ReconciliationPolicyAsync(long parentId, string name, string properties, object userState) {
            if ((this.addIP4ReconciliationPolicyOperationCompleted == null)) {
                this.addIP4ReconciliationPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP4ReconciliationPolicyOperationCompleted);
            }
            this.InvokeAsync("addIP4ReconciliationPolicy", new object[] {
                        parentId,
                        name,
                        properties}, this.addIP4ReconciliationPolicyOperationCompleted, userState);
        }
        
        private void OnaddIP4ReconciliationPolicyOperationCompleted(object arg) {
            if ((this.addIP4ReconciliationPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP4ReconciliationPolicyCompleted(this, new addIP4ReconciliationPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP6Address(long containerId, string address, string type, string name, string properties) {
            object[] results = this.Invoke("addIP6Address", new object[] {
                        containerId,
                        address,
                        type,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP6AddressAsync(long containerId, string address, string type, string name, string properties) {
            this.addIP6AddressAsync(containerId, address, type, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP6AddressAsync(long containerId, string address, string type, string name, string properties, object userState) {
            if ((this.addIP6AddressOperationCompleted == null)) {
                this.addIP6AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP6AddressOperationCompleted);
            }
            this.InvokeAsync("addIP6Address", new object[] {
                        containerId,
                        address,
                        type,
                        name,
                        properties}, this.addIP6AddressOperationCompleted, userState);
        }
        
        private void OnaddIP6AddressOperationCompleted(object arg) {
            if ((this.addIP6AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP6AddressCompleted(this, new addIP6AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP6BlockByMACAddress(long parentId, string macAddress, string name, string properties) {
            object[] results = this.Invoke("addIP6BlockByMACAddress", new object[] {
                        parentId,
                        macAddress,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP6BlockByMACAddressAsync(long parentId, string macAddress, string name, string properties) {
            this.addIP6BlockByMACAddressAsync(parentId, macAddress, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP6BlockByMACAddressAsync(long parentId, string macAddress, string name, string properties, object userState) {
            if ((this.addIP6BlockByMACAddressOperationCompleted == null)) {
                this.addIP6BlockByMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP6BlockByMACAddressOperationCompleted);
            }
            this.InvokeAsync("addIP6BlockByMACAddress", new object[] {
                        parentId,
                        macAddress,
                        name,
                        properties}, this.addIP6BlockByMACAddressOperationCompleted, userState);
        }
        
        private void OnaddIP6BlockByMACAddressOperationCompleted(object arg) {
            if ((this.addIP6BlockByMACAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP6BlockByMACAddressCompleted(this, new addIP6BlockByMACAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP6BlockByPrefix(long parentId, string prefix, string name, string properties) {
            object[] results = this.Invoke("addIP6BlockByPrefix", new object[] {
                        parentId,
                        prefix,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP6BlockByPrefixAsync(long parentId, string prefix, string name, string properties) {
            this.addIP6BlockByPrefixAsync(parentId, prefix, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP6BlockByPrefixAsync(long parentId, string prefix, string name, string properties, object userState) {
            if ((this.addIP6BlockByPrefixOperationCompleted == null)) {
                this.addIP6BlockByPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP6BlockByPrefixOperationCompleted);
            }
            this.InvokeAsync("addIP6BlockByPrefix", new object[] {
                        parentId,
                        prefix,
                        name,
                        properties}, this.addIP6BlockByPrefixOperationCompleted, userState);
        }
        
        private void OnaddIP6BlockByPrefixOperationCompleted(object arg) {
            if ((this.addIP6BlockByPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP6BlockByPrefixCompleted(this, new addIP6BlockByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addIP6NetworkByPrefix(long parentId, string prefix, string name, string properties) {
            object[] results = this.Invoke("addIP6NetworkByPrefix", new object[] {
                        parentId,
                        prefix,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addIP6NetworkByPrefixAsync(long parentId, string prefix, string name, string properties) {
            this.addIP6NetworkByPrefixAsync(parentId, prefix, name, properties, null);
        }
        
        /// <remarks/>
        public void addIP6NetworkByPrefixAsync(long parentId, string prefix, string name, string properties, object userState) {
            if ((this.addIP6NetworkByPrefixOperationCompleted == null)) {
                this.addIP6NetworkByPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddIP6NetworkByPrefixOperationCompleted);
            }
            this.InvokeAsync("addIP6NetworkByPrefix", new object[] {
                        parentId,
                        prefix,
                        name,
                        properties}, this.addIP6NetworkByPrefixOperationCompleted, userState);
        }
        
        private void OnaddIP6NetworkByPrefixOperationCompleted(object arg) {
            if ((this.addIP6NetworkByPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addIP6NetworkByPrefixCompleted(this, new addIP6NetworkByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addMACAddress(long configurationId, string macAddress, string properties) {
            object[] results = this.Invoke("addMACAddress", new object[] {
                        configurationId,
                        macAddress,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addMACAddressAsync(long configurationId, string macAddress, string properties) {
            this.addMACAddressAsync(configurationId, macAddress, properties, null);
        }
        
        /// <remarks/>
        public void addMACAddressAsync(long configurationId, string macAddress, string properties, object userState) {
            if ((this.addMACAddressOperationCompleted == null)) {
                this.addMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMACAddressOperationCompleted);
            }
            this.InvokeAsync("addMACAddress", new object[] {
                        configurationId,
                        macAddress,
                        properties}, this.addMACAddressOperationCompleted, userState);
        }
        
        private void OnaddMACAddressOperationCompleted(object arg) {
            if ((this.addMACAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMACAddressCompleted(this, new addMACAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addMXRecord(long viewId, string absoluteName, int priority, string linkedRecordName, long ttl, string properties) {
            object[] results = this.Invoke("addMXRecord", new object[] {
                        viewId,
                        absoluteName,
                        priority,
                        linkedRecordName,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addMXRecordAsync(long viewId, string absoluteName, int priority, string linkedRecordName, long ttl, string properties) {
            this.addMXRecordAsync(viewId, absoluteName, priority, linkedRecordName, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addMXRecordAsync(long viewId, string absoluteName, int priority, string linkedRecordName, long ttl, string properties, object userState) {
            if ((this.addMXRecordOperationCompleted == null)) {
                this.addMXRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMXRecordOperationCompleted);
            }
            this.InvokeAsync("addMXRecord", new object[] {
                        viewId,
                        absoluteName,
                        priority,
                        linkedRecordName,
                        ttl,
                        properties}, this.addMXRecordOperationCompleted, userState);
        }
        
        private void OnaddMXRecordOperationCompleted(object arg) {
            if ((this.addMXRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMXRecordCompleted(this, new addMXRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addNAPTRRecord(long viewId, string absoluteName, int order, int preference, string service, string regexp, string replacement, string flags, long ttl, string properties) {
            object[] results = this.Invoke("addNAPTRRecord", new object[] {
                        viewId,
                        absoluteName,
                        order,
                        preference,
                        service,
                        regexp,
                        replacement,
                        flags,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addNAPTRRecordAsync(long viewId, string absoluteName, int order, int preference, string service, string regexp, string replacement, string flags, long ttl, string properties) {
            this.addNAPTRRecordAsync(viewId, absoluteName, order, preference, service, regexp, replacement, flags, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addNAPTRRecordAsync(long viewId, string absoluteName, int order, int preference, string service, string regexp, string replacement, string flags, long ttl, string properties, object userState) {
            if ((this.addNAPTRRecordOperationCompleted == null)) {
                this.addNAPTRRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNAPTRRecordOperationCompleted);
            }
            this.InvokeAsync("addNAPTRRecord", new object[] {
                        viewId,
                        absoluteName,
                        order,
                        preference,
                        service,
                        regexp,
                        replacement,
                        flags,
                        ttl,
                        properties}, this.addNAPTRRecordOperationCompleted, userState);
        }
        
        private void OnaddNAPTRRecordOperationCompleted(object arg) {
            if ((this.addNAPTRRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNAPTRRecordCompleted(this, new addNAPTRRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addParentBlock([System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<long>[] blockOrNetworkIds) {
            object[] results = this.Invoke("addParentBlock", new object[] {
                        blockOrNetworkIds});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addParentBlockAsync(System.Nullable<long>[] blockOrNetworkIds) {
            this.addParentBlockAsync(blockOrNetworkIds, null);
        }
        
        /// <remarks/>
        public void addParentBlockAsync(System.Nullable<long>[] blockOrNetworkIds, object userState) {
            if ((this.addParentBlockOperationCompleted == null)) {
                this.addParentBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddParentBlockOperationCompleted);
            }
            this.InvokeAsync("addParentBlock", new object[] {
                        blockOrNetworkIds}, this.addParentBlockOperationCompleted, userState);
        }
        
        private void OnaddParentBlockOperationCompleted(object arg) {
            if ((this.addParentBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addParentBlockCompleted(this, new addParentBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addParentBlockWithProperties([System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<long>[] blockOrNetworkIds, string properties) {
            object[] results = this.Invoke("addParentBlockWithProperties", new object[] {
                        blockOrNetworkIds,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addParentBlockWithPropertiesAsync(System.Nullable<long>[] blockOrNetworkIds, string properties) {
            this.addParentBlockWithPropertiesAsync(blockOrNetworkIds, properties, null);
        }
        
        /// <remarks/>
        public void addParentBlockWithPropertiesAsync(System.Nullable<long>[] blockOrNetworkIds, string properties, object userState) {
            if ((this.addParentBlockWithPropertiesOperationCompleted == null)) {
                this.addParentBlockWithPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddParentBlockWithPropertiesOperationCompleted);
            }
            this.InvokeAsync("addParentBlockWithProperties", new object[] {
                        blockOrNetworkIds,
                        properties}, this.addParentBlockWithPropertiesOperationCompleted, userState);
        }
        
        private void OnaddParentBlockWithPropertiesOperationCompleted(object arg) {
            if ((this.addParentBlockWithPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addParentBlockWithPropertiesCompleted(this, new addParentBlockWithPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addResourceRecord(long viewId, string absoluteName, string type, string rdata, long ttl, string properties) {
            object[] results = this.Invoke("addResourceRecord", new object[] {
                        viewId,
                        absoluteName,
                        type,
                        rdata,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addResourceRecordAsync(long viewId, string absoluteName, string type, string rdata, long ttl, string properties) {
            this.addResourceRecordAsync(viewId, absoluteName, type, rdata, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addResourceRecordAsync(long viewId, string absoluteName, string type, string rdata, long ttl, string properties, object userState) {
            if ((this.addResourceRecordOperationCompleted == null)) {
                this.addResourceRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddResourceRecordOperationCompleted);
            }
            this.InvokeAsync("addResourceRecord", new object[] {
                        viewId,
                        absoluteName,
                        type,
                        rdata,
                        ttl,
                        properties}, this.addResourceRecordOperationCompleted, userState);
        }
        
        private void OnaddResourceRecordOperationCompleted(object arg) {
            if ((this.addResourceRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addResourceRecordCompleted(this, new addResourceRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addResponsePolicy(long configurationId, string name, string responsePolicyType, long ttl, string properties) {
            object[] results = this.Invoke("addResponsePolicy", new object[] {
                        configurationId,
                        name,
                        responsePolicyType,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addResponsePolicyAsync(long configurationId, string name, string responsePolicyType, long ttl, string properties) {
            this.addResponsePolicyAsync(configurationId, name, responsePolicyType, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addResponsePolicyAsync(long configurationId, string name, string responsePolicyType, long ttl, string properties, object userState) {
            if ((this.addResponsePolicyOperationCompleted == null)) {
                this.addResponsePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddResponsePolicyOperationCompleted);
            }
            this.InvokeAsync("addResponsePolicy", new object[] {
                        configurationId,
                        name,
                        responsePolicyType,
                        ttl,
                        properties}, this.addResponsePolicyOperationCompleted, userState);
        }
        
        private void OnaddResponsePolicyOperationCompleted(object arg) {
            if ((this.addResponsePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addResponsePolicyCompleted(this, new addResponsePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addSRVRecord(long viewId, string absoluteName, int priority, int port, int weight, string linkedRecordName, long ttl, string properties) {
            object[] results = this.Invoke("addSRVRecord", new object[] {
                        viewId,
                        absoluteName,
                        priority,
                        port,
                        weight,
                        linkedRecordName,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addSRVRecordAsync(long viewId, string absoluteName, int priority, int port, int weight, string linkedRecordName, long ttl, string properties) {
            this.addSRVRecordAsync(viewId, absoluteName, priority, port, weight, linkedRecordName, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addSRVRecordAsync(long viewId, string absoluteName, int priority, int port, int weight, string linkedRecordName, long ttl, string properties, object userState) {
            if ((this.addSRVRecordOperationCompleted == null)) {
                this.addSRVRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSRVRecordOperationCompleted);
            }
            this.InvokeAsync("addSRVRecord", new object[] {
                        viewId,
                        absoluteName,
                        priority,
                        port,
                        weight,
                        linkedRecordName,
                        ttl,
                        properties}, this.addSRVRecordOperationCompleted, userState);
        }
        
        private void OnaddSRVRecordOperationCompleted(object arg) {
            if ((this.addSRVRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSRVRecordCompleted(this, new addSRVRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addServer(long configurationId, string name, string defaultInterfaceAddress, string fullHostName, string profile, string properties) {
            object[] results = this.Invoke("addServer", new object[] {
                        configurationId,
                        name,
                        defaultInterfaceAddress,
                        fullHostName,
                        profile,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addServerAsync(long configurationId, string name, string defaultInterfaceAddress, string fullHostName, string profile, string properties) {
            this.addServerAsync(configurationId, name, defaultInterfaceAddress, fullHostName, profile, properties, null);
        }
        
        /// <remarks/>
        public void addServerAsync(long configurationId, string name, string defaultInterfaceAddress, string fullHostName, string profile, string properties, object userState) {
            if ((this.addServerOperationCompleted == null)) {
                this.addServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddServerOperationCompleted);
            }
            this.InvokeAsync("addServer", new object[] {
                        configurationId,
                        name,
                        defaultInterfaceAddress,
                        fullHostName,
                        profile,
                        properties}, this.addServerOperationCompleted, userState);
        }
        
        private void OnaddServerOperationCompleted(object arg) {
            if ((this.addServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addServerCompleted(this, new addServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addStartOfAuthority(long parentId, string email, long refresh, long retry, long expire, long minimum, string properties) {
            object[] results = this.Invoke("addStartOfAuthority", new object[] {
                        parentId,
                        email,
                        refresh,
                        retry,
                        expire,
                        minimum,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addStartOfAuthorityAsync(long parentId, string email, long refresh, long retry, long expire, long minimum, string properties) {
            this.addStartOfAuthorityAsync(parentId, email, refresh, retry, expire, minimum, properties, null);
        }
        
        /// <remarks/>
        public void addStartOfAuthorityAsync(long parentId, string email, long refresh, long retry, long expire, long minimum, string properties, object userState) {
            if ((this.addStartOfAuthorityOperationCompleted == null)) {
                this.addStartOfAuthorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStartOfAuthorityOperationCompleted);
            }
            this.InvokeAsync("addStartOfAuthority", new object[] {
                        parentId,
                        email,
                        refresh,
                        retry,
                        expire,
                        minimum,
                        properties}, this.addStartOfAuthorityOperationCompleted, userState);
        }
        
        private void OnaddStartOfAuthorityOperationCompleted(object arg) {
            if ((this.addStartOfAuthorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStartOfAuthorityCompleted(this, new addStartOfAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTFTPDeploymentRole(long entityId, long serverId, string properties) {
            object[] results = this.Invoke("addTFTPDeploymentRole", new object[] {
                        entityId,
                        serverId,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTFTPDeploymentRoleAsync(long entityId, long serverId, string properties) {
            this.addTFTPDeploymentRoleAsync(entityId, serverId, properties, null);
        }
        
        /// <remarks/>
        public void addTFTPDeploymentRoleAsync(long entityId, long serverId, string properties, object userState) {
            if ((this.addTFTPDeploymentRoleOperationCompleted == null)) {
                this.addTFTPDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTFTPDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("addTFTPDeploymentRole", new object[] {
                        entityId,
                        serverId,
                        properties}, this.addTFTPDeploymentRoleOperationCompleted, userState);
        }
        
        private void OnaddTFTPDeploymentRoleOperationCompleted(object arg) {
            if ((this.addTFTPDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTFTPDeploymentRoleCompleted(this, new addTFTPDeploymentRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTFTPFile(long parentId, string name, string version, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string properties) {
            object[] results = this.Invoke("addTFTPFile", new object[] {
                        parentId,
                        name,
                        version,
                        data,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTFTPFileAsync(long parentId, string name, string version, byte[] data, string properties) {
            this.addTFTPFileAsync(parentId, name, version, data, properties, null);
        }
        
        /// <remarks/>
        public void addTFTPFileAsync(long parentId, string name, string version, byte[] data, string properties, object userState) {
            if ((this.addTFTPFileOperationCompleted == null)) {
                this.addTFTPFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTFTPFileOperationCompleted);
            }
            this.InvokeAsync("addTFTPFile", new object[] {
                        parentId,
                        name,
                        version,
                        data,
                        properties}, this.addTFTPFileOperationCompleted, userState);
        }
        
        private void OnaddTFTPFileOperationCompleted(object arg) {
            if ((this.addTFTPFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTFTPFileCompleted(this, new addTFTPFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTFTPFolder(long parentId, string name, string properties) {
            object[] results = this.Invoke("addTFTPFolder", new object[] {
                        parentId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTFTPFolderAsync(long parentId, string name, string properties) {
            this.addTFTPFolderAsync(parentId, name, properties, null);
        }
        
        /// <remarks/>
        public void addTFTPFolderAsync(long parentId, string name, string properties, object userState) {
            if ((this.addTFTPFolderOperationCompleted == null)) {
                this.addTFTPFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTFTPFolderOperationCompleted);
            }
            this.InvokeAsync("addTFTPFolder", new object[] {
                        parentId,
                        name,
                        properties}, this.addTFTPFolderOperationCompleted, userState);
        }
        
        private void OnaddTFTPFolderOperationCompleted(object arg) {
            if ((this.addTFTPFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTFTPFolderCompleted(this, new addTFTPFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTFTPGroup(long configurationId, string name, string properties) {
            object[] results = this.Invoke("addTFTPGroup", new object[] {
                        configurationId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTFTPGroupAsync(long configurationId, string name, string properties) {
            this.addTFTPGroupAsync(configurationId, name, properties, null);
        }
        
        /// <remarks/>
        public void addTFTPGroupAsync(long configurationId, string name, string properties, object userState) {
            if ((this.addTFTPGroupOperationCompleted == null)) {
                this.addTFTPGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTFTPGroupOperationCompleted);
            }
            this.InvokeAsync("addTFTPGroup", new object[] {
                        configurationId,
                        name,
                        properties}, this.addTFTPGroupOperationCompleted, userState);
        }
        
        private void OnaddTFTPGroupOperationCompleted(object arg) {
            if ((this.addTFTPGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTFTPGroupCompleted(this, new addTFTPGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTXTRecord(long viewId, string absoluteName, string txt, long ttl, string properties) {
            object[] results = this.Invoke("addTXTRecord", new object[] {
                        viewId,
                        absoluteName,
                        txt,
                        ttl,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTXTRecordAsync(long viewId, string absoluteName, string txt, long ttl, string properties) {
            this.addTXTRecordAsync(viewId, absoluteName, txt, ttl, properties, null);
        }
        
        /// <remarks/>
        public void addTXTRecordAsync(long viewId, string absoluteName, string txt, long ttl, string properties, object userState) {
            if ((this.addTXTRecordOperationCompleted == null)) {
                this.addTXTRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTXTRecordOperationCompleted);
            }
            this.InvokeAsync("addTXTRecord", new object[] {
                        viewId,
                        absoluteName,
                        txt,
                        ttl,
                        properties}, this.addTXTRecordOperationCompleted, userState);
        }
        
        private void OnaddTXTRecordOperationCompleted(object arg) {
            if ((this.addTXTRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTXTRecordCompleted(this, new addTXTRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTag(long parentId, string name, string properties) {
            object[] results = this.Invoke("addTag", new object[] {
                        parentId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTagAsync(long parentId, string name, string properties) {
            this.addTagAsync(parentId, name, properties, null);
        }
        
        /// <remarks/>
        public void addTagAsync(long parentId, string name, string properties, object userState) {
            if ((this.addTagOperationCompleted == null)) {
                this.addTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTagOperationCompleted);
            }
            this.InvokeAsync("addTag", new object[] {
                        parentId,
                        name,
                        properties}, this.addTagOperationCompleted, userState);
        }
        
        private void OnaddTagOperationCompleted(object arg) {
            if ((this.addTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTagCompleted(this, new addTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addTagGroup(string name, string properties) {
            object[] results = this.Invoke("addTagGroup", new object[] {
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addTagGroupAsync(string name, string properties) {
            this.addTagGroupAsync(name, properties, null);
        }
        
        /// <remarks/>
        public void addTagGroupAsync(string name, string properties, object userState) {
            if ((this.addTagGroupOperationCompleted == null)) {
                this.addTagGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTagGroupOperationCompleted);
            }
            this.InvokeAsync("addTagGroup", new object[] {
                        name,
                        properties}, this.addTagGroupOperationCompleted, userState);
        }
        
        private void OnaddTagGroupOperationCompleted(object arg) {
            if ((this.addTagGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTagGroupCompleted(this, new addTagGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addUser(string username, string password, string properties) {
            object[] results = this.Invoke("addUser", new object[] {
                        username,
                        password,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addUserAsync(string username, string password, string properties) {
            this.addUserAsync(username, password, properties, null);
        }
        
        /// <remarks/>
        public void addUserAsync(string username, string password, string properties, object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        username,
                        password,
                        properties}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new addUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addUserGroup(string name, string properties) {
            object[] results = this.Invoke("addUserGroup", new object[] {
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addUserGroupAsync(string name, string properties) {
            this.addUserGroupAsync(name, properties, null);
        }
        
        /// <remarks/>
        public void addUserGroupAsync(string name, string properties, object userState) {
            if ((this.addUserGroupOperationCompleted == null)) {
                this.addUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserGroupOperationCompleted);
            }
            this.InvokeAsync("addUserGroup", new object[] {
                        name,
                        properties}, this.addUserGroupOperationCompleted, userState);
        }
        
        private void OnaddUserGroupOperationCompleted(object arg) {
            if ((this.addUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserGroupCompleted(this, new addUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addVendorOptionDefinition(long vendorProfileId, long optionId, string name, string optionType, string description, bool allowMultiple, string properties) {
            object[] results = this.Invoke("addVendorOptionDefinition", new object[] {
                        vendorProfileId,
                        optionId,
                        name,
                        optionType,
                        description,
                        allowMultiple,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addVendorOptionDefinitionAsync(long vendorProfileId, long optionId, string name, string optionType, string description, bool allowMultiple, string properties) {
            this.addVendorOptionDefinitionAsync(vendorProfileId, optionId, name, optionType, description, allowMultiple, properties, null);
        }
        
        /// <remarks/>
        public void addVendorOptionDefinitionAsync(long vendorProfileId, long optionId, string name, string optionType, string description, bool allowMultiple, string properties, object userState) {
            if ((this.addVendorOptionDefinitionOperationCompleted == null)) {
                this.addVendorOptionDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddVendorOptionDefinitionOperationCompleted);
            }
            this.InvokeAsync("addVendorOptionDefinition", new object[] {
                        vendorProfileId,
                        optionId,
                        name,
                        optionType,
                        description,
                        allowMultiple,
                        properties}, this.addVendorOptionDefinitionOperationCompleted, userState);
        }
        
        private void OnaddVendorOptionDefinitionOperationCompleted(object arg) {
            if ((this.addVendorOptionDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addVendorOptionDefinitionCompleted(this, new addVendorOptionDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addVendorProfile(string identifier, string name, string description, string properties) {
            object[] results = this.Invoke("addVendorProfile", new object[] {
                        identifier,
                        name,
                        description,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addVendorProfileAsync(string identifier, string name, string description, string properties) {
            this.addVendorProfileAsync(identifier, name, description, properties, null);
        }
        
        /// <remarks/>
        public void addVendorProfileAsync(string identifier, string name, string description, string properties, object userState) {
            if ((this.addVendorProfileOperationCompleted == null)) {
                this.addVendorProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddVendorProfileOperationCompleted);
            }
            this.InvokeAsync("addVendorProfile", new object[] {
                        identifier,
                        name,
                        description,
                        properties}, this.addVendorProfileOperationCompleted, userState);
        }
        
        private void OnaddVendorProfileOperationCompleted(object arg) {
            if ((this.addVendorProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addVendorProfileCompleted(this, new addVendorProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addView(long configurationId, string name, string properties) {
            object[] results = this.Invoke("addView", new object[] {
                        configurationId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addViewAsync(long configurationId, string name, string properties) {
            this.addViewAsync(configurationId, name, properties, null);
        }
        
        /// <remarks/>
        public void addViewAsync(long configurationId, string name, string properties, object userState) {
            if ((this.addViewOperationCompleted == null)) {
                this.addViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddViewOperationCompleted);
            }
            this.InvokeAsync("addView", new object[] {
                        configurationId,
                        name,
                        properties}, this.addViewOperationCompleted, userState);
        }
        
        private void OnaddViewOperationCompleted(object arg) {
            if ((this.addViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addViewCompleted(this, new addViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addZone(long parentId, string absoluteName, string properties) {
            object[] results = this.Invoke("addZone", new object[] {
                        parentId,
                        absoluteName,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addZoneAsync(long parentId, string absoluteName, string properties) {
            this.addZoneAsync(parentId, absoluteName, properties, null);
        }
        
        /// <remarks/>
        public void addZoneAsync(long parentId, string absoluteName, string properties, object userState) {
            if ((this.addZoneOperationCompleted == null)) {
                this.addZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddZoneOperationCompleted);
            }
            this.InvokeAsync("addZone", new object[] {
                        parentId,
                        absoluteName,
                        properties}, this.addZoneOperationCompleted, userState);
        }
        
        private void OnaddZoneOperationCompleted(object arg) {
            if ((this.addZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addZoneCompleted(this, new addZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long addZoneTemplate(long parentId, string name, string properties) {
            object[] results = this.Invoke("addZoneTemplate", new object[] {
                        parentId,
                        name,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void addZoneTemplateAsync(long parentId, string name, string properties) {
            this.addZoneTemplateAsync(parentId, name, properties, null);
        }
        
        /// <remarks/>
        public void addZoneTemplateAsync(long parentId, string name, string properties, object userState) {
            if ((this.addZoneTemplateOperationCompleted == null)) {
                this.addZoneTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddZoneTemplateOperationCompleted);
            }
            this.InvokeAsync("addZoneTemplate", new object[] {
                        parentId,
                        name,
                        properties}, this.addZoneTemplateOperationCompleted, userState);
        }
        
        private void OnaddZoneTemplateOperationCompleted(object arg) {
            if ((this.addZoneTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addZoneTemplateCompleted(this, new addZoneTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long assignIP4Address(long configurationId, string ip4Address, string macAddress, string hostInfo, string action, string properties) {
            object[] results = this.Invoke("assignIP4Address", new object[] {
                        configurationId,
                        ip4Address,
                        macAddress,
                        hostInfo,
                        action,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void assignIP4AddressAsync(long configurationId, string ip4Address, string macAddress, string hostInfo, string action, string properties) {
            this.assignIP4AddressAsync(configurationId, ip4Address, macAddress, hostInfo, action, properties, null);
        }
        
        /// <remarks/>
        public void assignIP4AddressAsync(long configurationId, string ip4Address, string macAddress, string hostInfo, string action, string properties, object userState) {
            if ((this.assignIP4AddressOperationCompleted == null)) {
                this.assignIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignIP4AddressOperationCompleted);
            }
            this.InvokeAsync("assignIP4Address", new object[] {
                        configurationId,
                        ip4Address,
                        macAddress,
                        hostInfo,
                        action,
                        properties}, this.assignIP4AddressOperationCompleted, userState);
        }
        
        private void OnassignIP4AddressOperationCompleted(object arg) {
            if ((this.assignIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignIP4AddressCompleted(this, new assignIP4AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool assignIP6Address(long containerId, string address, string action, string macAddress, string hostInfo, string properties) {
            object[] results = this.Invoke("assignIP6Address", new object[] {
                        containerId,
                        address,
                        action,
                        macAddress,
                        hostInfo,
                        properties});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void assignIP6AddressAsync(long containerId, string address, string action, string macAddress, string hostInfo, string properties) {
            this.assignIP6AddressAsync(containerId, address, action, macAddress, hostInfo, properties, null);
        }
        
        /// <remarks/>
        public void assignIP6AddressAsync(long containerId, string address, string action, string macAddress, string hostInfo, string properties, object userState) {
            if ((this.assignIP6AddressOperationCompleted == null)) {
                this.assignIP6AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignIP6AddressOperationCompleted);
            }
            this.InvokeAsync("assignIP6Address", new object[] {
                        containerId,
                        address,
                        action,
                        macAddress,
                        hostInfo,
                        properties}, this.assignIP6AddressOperationCompleted, userState);
        }
        
        private void OnassignIP6AddressOperationCompleted(object arg) {
            if ((this.assignIP6AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignIP6AddressCompleted(this, new assignIP6AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity assignNextAvailableIP4Address(long configurationId, long parentId, string macAddress, string hostInfo, string action, string properties) {
            object[] results = this.Invoke("assignNextAvailableIP4Address", new object[] {
                        configurationId,
                        parentId,
                        macAddress,
                        hostInfo,
                        action,
                        properties});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void assignNextAvailableIP4AddressAsync(long configurationId, long parentId, string macAddress, string hostInfo, string action, string properties) {
            this.assignNextAvailableIP4AddressAsync(configurationId, parentId, macAddress, hostInfo, action, properties, null);
        }
        
        /// <remarks/>
        public void assignNextAvailableIP4AddressAsync(long configurationId, long parentId, string macAddress, string hostInfo, string action, string properties, object userState) {
            if ((this.assignNextAvailableIP4AddressOperationCompleted == null)) {
                this.assignNextAvailableIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignNextAvailableIP4AddressOperationCompleted);
            }
            this.InvokeAsync("assignNextAvailableIP4Address", new object[] {
                        configurationId,
                        parentId,
                        macAddress,
                        hostInfo,
                        action,
                        properties}, this.assignNextAvailableIP4AddressOperationCompleted, userState);
        }
        
        private void OnassignNextAvailableIP4AddressOperationCompleted(object arg) {
            if ((this.assignNextAvailableIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignNextAvailableIP4AddressCompleted(this, new assignNextAvailableIP4AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void assignOrUpdateTemplate(long entityId, long templateId, string properties) {
            this.Invoke("assignOrUpdateTemplate", new object[] {
                        entityId,
                        templateId,
                        properties});
        }
        
        /// <remarks/>
        public void assignOrUpdateTemplateAsync(long entityId, long templateId, string properties) {
            this.assignOrUpdateTemplateAsync(entityId, templateId, properties, null);
        }
        
        /// <remarks/>
        public void assignOrUpdateTemplateAsync(long entityId, long templateId, string properties, object userState) {
            if ((this.assignOrUpdateTemplateOperationCompleted == null)) {
                this.assignOrUpdateTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignOrUpdateTemplateOperationCompleted);
            }
            this.InvokeAsync("assignOrUpdateTemplate", new object[] {
                        entityId,
                        templateId,
                        properties}, this.assignOrUpdateTemplateOperationCompleted, userState);
        }
        
        private void OnassignOrUpdateTemplateOperationCompleted(object arg) {
            if ((this.assignOrUpdateTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignOrUpdateTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void associateMACAddressWithPool(long configurationId, string macAddress, long poolId) {
            this.Invoke("associateMACAddressWithPool", new object[] {
                        configurationId,
                        macAddress,
                        poolId});
        }
        
        /// <remarks/>
        public void associateMACAddressWithPoolAsync(long configurationId, string macAddress, long poolId) {
            this.associateMACAddressWithPoolAsync(configurationId, macAddress, poolId, null);
        }
        
        /// <remarks/>
        public void associateMACAddressWithPoolAsync(long configurationId, string macAddress, long poolId, object userState) {
            if ((this.associateMACAddressWithPoolOperationCompleted == null)) {
                this.associateMACAddressWithPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassociateMACAddressWithPoolOperationCompleted);
            }
            this.InvokeAsync("associateMACAddressWithPool", new object[] {
                        configurationId,
                        macAddress,
                        poolId}, this.associateMACAddressWithPoolOperationCompleted, userState);
        }
        
        private void OnassociateMACAddressWithPoolOperationCompleted(object arg) {
            if ((this.associateMACAddressWithPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.associateMACAddressWithPoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void breakXHAPair(long xHAServerId, bool breakInProteusOnly) {
            this.Invoke("breakXHAPair", new object[] {
                        xHAServerId,
                        breakInProteusOnly});
        }
        
        /// <remarks/>
        public void breakXHAPairAsync(long xHAServerId, bool breakInProteusOnly) {
            this.breakXHAPairAsync(xHAServerId, breakInProteusOnly, null);
        }
        
        /// <remarks/>
        public void breakXHAPairAsync(long xHAServerId, bool breakInProteusOnly, object userState) {
            if ((this.breakXHAPairOperationCompleted == null)) {
                this.breakXHAPairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbreakXHAPairOperationCompleted);
            }
            this.InvokeAsync("breakXHAPair", new object[] {
                        xHAServerId,
                        breakInProteusOnly}, this.breakXHAPairOperationCompleted, userState);
        }
        
        private void OnbreakXHAPairOperationCompleted(object arg) {
            if ((this.breakXHAPairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.breakXHAPairCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void changeStateIP4Address(long addressId, string targetState, string macAddress) {
            this.Invoke("changeStateIP4Address", new object[] {
                        addressId,
                        targetState,
                        macAddress});
        }
        
        /// <remarks/>
        public void changeStateIP4AddressAsync(long addressId, string targetState, string macAddress) {
            this.changeStateIP4AddressAsync(addressId, targetState, macAddress, null);
        }
        
        /// <remarks/>
        public void changeStateIP4AddressAsync(long addressId, string targetState, string macAddress, object userState) {
            if ((this.changeStateIP4AddressOperationCompleted == null)) {
                this.changeStateIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeStateIP4AddressOperationCompleted);
            }
            this.InvokeAsync("changeStateIP4Address", new object[] {
                        addressId,
                        targetState,
                        macAddress}, this.changeStateIP4AddressOperationCompleted, userState);
        }
        
        private void OnchangeStateIP4AddressOperationCompleted(object arg) {
            if ((this.changeStateIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeStateIP4AddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool clearIP6Address(long addressId) {
            object[] results = this.Invoke("clearIP6Address", new object[] {
                        addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void clearIP6AddressAsync(long addressId) {
            this.clearIP6AddressAsync(addressId, null);
        }
        
        /// <remarks/>
        public void clearIP6AddressAsync(long addressId, object userState) {
            if ((this.clearIP6AddressOperationCompleted == null)) {
                this.clearIP6AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearIP6AddressOperationCompleted);
            }
            this.InvokeAsync("clearIP6Address", new object[] {
                        addressId}, this.clearIP6AddressOperationCompleted, userState);
        }
        
        private void OnclearIP6AddressOperationCompleted(object arg) {
            if ((this.clearIP6AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearIP6AddressCompleted(this, new clearIP6AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void configureReplication(string standbyServer, bool compressReplication, long replicationQueueThreshold, long replicationBreakThreshold, string properties) {
            this.Invoke("configureReplication", new object[] {
                        standbyServer,
                        compressReplication,
                        replicationQueueThreshold,
                        replicationBreakThreshold,
                        properties});
        }
        
        /// <remarks/>
        public void configureReplicationAsync(string standbyServer, bool compressReplication, long replicationQueueThreshold, long replicationBreakThreshold, string properties) {
            this.configureReplicationAsync(standbyServer, compressReplication, replicationQueueThreshold, replicationBreakThreshold, properties, null);
        }
        
        /// <remarks/>
        public void configureReplicationAsync(string standbyServer, bool compressReplication, long replicationQueueThreshold, long replicationBreakThreshold, string properties, object userState) {
            if ((this.configureReplicationOperationCompleted == null)) {
                this.configureReplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfigureReplicationOperationCompleted);
            }
            this.InvokeAsync("configureReplication", new object[] {
                        standbyServer,
                        compressReplication,
                        replicationQueueThreshold,
                        replicationBreakThreshold,
                        properties}, this.configureReplicationOperationCompleted, userState);
        }
        
        private void OnconfigureReplicationOperationCompleted(object arg) {
            if ((this.configureReplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.configureReplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long createXHAPair(long configurationId, long activeServerId, long passiveServerId, string activeServerNewIPv4Address, string properties) {
            object[] results = this.Invoke("createXHAPair", new object[] {
                        configurationId,
                        activeServerId,
                        passiveServerId,
                        activeServerNewIPv4Address,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void createXHAPairAsync(long configurationId, long activeServerId, long passiveServerId, string activeServerNewIPv4Address, string properties) {
            this.createXHAPairAsync(configurationId, activeServerId, passiveServerId, activeServerNewIPv4Address, properties, null);
        }
        
        /// <remarks/>
        public void createXHAPairAsync(long configurationId, long activeServerId, long passiveServerId, string activeServerNewIPv4Address, string properties, object userState) {
            if ((this.createXHAPairOperationCompleted == null)) {
                this.createXHAPairOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateXHAPairOperationCompleted);
            }
            this.InvokeAsync("createXHAPair", new object[] {
                        configurationId,
                        activeServerId,
                        passiveServerId,
                        activeServerNewIPv4Address,
                        properties}, this.createXHAPairOperationCompleted, userState);
        }
        
        private void OncreateXHAPairOperationCompleted(object arg) {
            if ((this.createXHAPairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createXHAPairCompleted(this, new createXHAPairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void delete(long objectId) {
            this.Invoke("delete", new object[] {
                        objectId});
        }
        
        /// <remarks/>
        public void deleteAsync(long objectId) {
            this.deleteAsync(objectId, null);
        }
        
        /// <remarks/>
        public void deleteAsync(long objectId, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        objectId}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteAccessRight(long entityId, long userId) {
            this.Invoke("deleteAccessRight", new object[] {
                        entityId,
                        userId});
        }
        
        /// <remarks/>
        public void deleteAccessRightAsync(long entityId, long userId) {
            this.deleteAccessRightAsync(entityId, userId, null);
        }
        
        /// <remarks/>
        public void deleteAccessRightAsync(long entityId, long userId, object userState) {
            if ((this.deleteAccessRightOperationCompleted == null)) {
                this.deleteAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccessRightOperationCompleted);
            }
            this.InvokeAsync("deleteAccessRight", new object[] {
                        entityId,
                        userId}, this.deleteAccessRightOperationCompleted, userState);
        }
        
        private void OndeleteAccessRightOperationCompleted(object arg) {
            if ((this.deleteAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccessRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCP6ClientDeploymentOption(long entityId, string name, long serverId) {
            this.Invoke("deleteDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDHCP6ClientDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.deleteDHCP6ClientDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDHCP6ClientDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.deleteDHCP6ClientDeploymentOptionOperationCompleted == null)) {
                this.deleteDHCP6ClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCP6ClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.deleteDHCP6ClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDHCP6ClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDHCP6ClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCP6ClientDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCP6ServiceDeploymentOption(long entityId, string name, long serverId) {
            this.Invoke("deleteDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDHCP6ServiceDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.deleteDHCP6ServiceDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDHCP6ServiceDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.deleteDHCP6ServiceDeploymentOptionOperationCompleted == null)) {
                this.deleteDHCP6ServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCP6ServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.deleteDHCP6ServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDHCP6ServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDHCP6ServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCP6ServiceDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCPClientDeploymentOption(long entityId, string name, long serverId) {
            this.Invoke("deleteDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDHCPClientDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.deleteDHCPClientDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDHCPClientDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.deleteDHCPClientDeploymentOptionOperationCompleted == null)) {
                this.deleteDHCPClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCPClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.deleteDHCPClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDHCPClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDHCPClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCPClientDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCPDeploymentRole(long entityId, long serverInterfaceId) {
            this.Invoke("deleteDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId});
        }
        
        /// <remarks/>
        public void deleteDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId) {
            this.deleteDHCPDeploymentRoleAsync(entityId, serverInterfaceId, null);
        }
        
        /// <remarks/>
        public void deleteDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId, object userState) {
            if ((this.deleteDHCPDeploymentRoleOperationCompleted == null)) {
                this.deleteDHCPDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCPDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("deleteDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId}, this.deleteDHCPDeploymentRoleOperationCompleted, userState);
        }
        
        private void OndeleteDHCPDeploymentRoleOperationCompleted(object arg) {
            if ((this.deleteDHCPDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCPDeploymentRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCPServiceDeploymentOption(long entityId, string name, long serverId) {
            this.Invoke("deleteDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDHCPServiceDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.deleteDHCPServiceDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDHCPServiceDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.deleteDHCPServiceDeploymentOptionOperationCompleted == null)) {
                this.deleteDHCPServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCPServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.deleteDHCPServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDHCPServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDHCPServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCPServiceDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDHCPVendorDeploymentOption(long entityId, long optionId, long serverId) {
            this.Invoke("deleteDHCPVendorDeploymentOption", new object[] {
                        entityId,
                        optionId,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDHCPVendorDeploymentOptionAsync(long entityId, long optionId, long serverId) {
            this.deleteDHCPVendorDeploymentOptionAsync(entityId, optionId, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDHCPVendorDeploymentOptionAsync(long entityId, long optionId, long serverId, object userState) {
            if ((this.deleteDHCPVendorDeploymentOptionOperationCompleted == null)) {
                this.deleteDHCPVendorDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDHCPVendorDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDHCPVendorDeploymentOption", new object[] {
                        entityId,
                        optionId,
                        serverId}, this.deleteDHCPVendorDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDHCPVendorDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDHCPVendorDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDHCPVendorDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDNSDeploymentOption(long entityId, string name, long serverId) {
            this.Invoke("deleteDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.deleteDNSDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.deleteDNSDeploymentOptionOperationCompleted == null)) {
                this.deleteDNSDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDNSDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("deleteDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.deleteDNSDeploymentOptionOperationCompleted, userState);
        }
        
        private void OndeleteDNSDeploymentOptionOperationCompleted(object arg) {
            if ((this.deleteDNSDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDNSDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDNSDeploymentRole(long entityId, long serverInterfaceId) {
            this.Invoke("deleteDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId});
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentRoleAsync(long entityId, long serverInterfaceId) {
            this.deleteDNSDeploymentRoleAsync(entityId, serverInterfaceId, null);
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentRoleAsync(long entityId, long serverInterfaceId, object userState) {
            if ((this.deleteDNSDeploymentRoleOperationCompleted == null)) {
                this.deleteDNSDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDNSDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("deleteDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId}, this.deleteDNSDeploymentRoleOperationCompleted, userState);
        }
        
        private void OndeleteDNSDeploymentRoleOperationCompleted(object arg) {
            if ((this.deleteDNSDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDNSDeploymentRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDNSDeploymentRoleForView(long entityId, long serverInterfaceId, long viewId) {
            this.Invoke("deleteDNSDeploymentRoleForView", new object[] {
                        entityId,
                        serverInterfaceId,
                        viewId});
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentRoleForViewAsync(long entityId, long serverInterfaceId, long viewId) {
            this.deleteDNSDeploymentRoleForViewAsync(entityId, serverInterfaceId, viewId, null);
        }
        
        /// <remarks/>
        public void deleteDNSDeploymentRoleForViewAsync(long entityId, long serverInterfaceId, long viewId, object userState) {
            if ((this.deleteDNSDeploymentRoleForViewOperationCompleted == null)) {
                this.deleteDNSDeploymentRoleForViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDNSDeploymentRoleForViewOperationCompleted);
            }
            this.InvokeAsync("deleteDNSDeploymentRoleForView", new object[] {
                        entityId,
                        serverInterfaceId,
                        viewId}, this.deleteDNSDeploymentRoleForViewOperationCompleted, userState);
        }
        
        private void OndeleteDNSDeploymentRoleForViewOperationCompleted(object arg) {
            if ((this.deleteDNSDeploymentRoleForViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDNSDeploymentRoleForViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteDeviceInstance(string configName, string identifier, string options) {
            this.Invoke("deleteDeviceInstance", new object[] {
                        configName,
                        identifier,
                        options});
        }
        
        /// <remarks/>
        public void deleteDeviceInstanceAsync(string configName, string identifier, string options) {
            this.deleteDeviceInstanceAsync(configName, identifier, options, null);
        }
        
        /// <remarks/>
        public void deleteDeviceInstanceAsync(string configName, string identifier, string options, object userState) {
            if ((this.deleteDeviceInstanceOperationCompleted == null)) {
                this.deleteDeviceInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDeviceInstanceOperationCompleted);
            }
            this.InvokeAsync("deleteDeviceInstance", new object[] {
                        configName,
                        identifier,
                        options}, this.deleteDeviceInstanceOperationCompleted, userState);
        }
        
        private void OndeleteDeviceInstanceOperationCompleted(object arg) {
            if ((this.deleteDeviceInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDeviceInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deleteWithOptions(long objectId, string options) {
            this.Invoke("deleteWithOptions", new object[] {
                        objectId,
                        options});
        }
        
        /// <remarks/>
        public void deleteWithOptionsAsync(long objectId, string options) {
            this.deleteWithOptionsAsync(objectId, options, null);
        }
        
        /// <remarks/>
        public void deleteWithOptionsAsync(long objectId, string options, object userState) {
            if ((this.deleteWithOptionsOperationCompleted == null)) {
                this.deleteWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWithOptionsOperationCompleted);
            }
            this.InvokeAsync("deleteWithOptions", new object[] {
                        objectId,
                        options}, this.deleteWithOptionsOperationCompleted, userState);
        }
        
        private void OndeleteWithOptionsOperationCompleted(object arg) {
            if ((this.deleteWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWithOptionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void denyMACAddress(long configurationId, string macAddress) {
            this.Invoke("denyMACAddress", new object[] {
                        configurationId,
                        macAddress});
        }
        
        /// <remarks/>
        public void denyMACAddressAsync(long configurationId, string macAddress) {
            this.denyMACAddressAsync(configurationId, macAddress, null);
        }
        
        /// <remarks/>
        public void denyMACAddressAsync(long configurationId, string macAddress, object userState) {
            if ((this.denyMACAddressOperationCompleted == null)) {
                this.denyMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OndenyMACAddressOperationCompleted);
            }
            this.InvokeAsync("denyMACAddress", new object[] {
                        configurationId,
                        macAddress}, this.denyMACAddressOperationCompleted, userState);
        }
        
        private void OndenyMACAddressOperationCompleted(object arg) {
            if ((this.denyMACAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.denyMACAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deployServer(long serverId) {
            this.Invoke("deployServer", new object[] {
                        serverId});
        }
        
        /// <remarks/>
        public void deployServerAsync(long serverId) {
            this.deployServerAsync(serverId, null);
        }
        
        /// <remarks/>
        public void deployServerAsync(long serverId, object userState) {
            if ((this.deployServerOperationCompleted == null)) {
                this.deployServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeployServerOperationCompleted);
            }
            this.InvokeAsync("deployServer", new object[] {
                        serverId}, this.deployServerOperationCompleted, userState);
        }
        
        private void OndeployServerOperationCompleted(object arg) {
            if ((this.deployServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deployServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deployServerConfig(long serverId, string properties) {
            this.Invoke("deployServerConfig", new object[] {
                        serverId,
                        properties});
        }
        
        /// <remarks/>
        public void deployServerConfigAsync(long serverId, string properties) {
            this.deployServerConfigAsync(serverId, properties, null);
        }
        
        /// <remarks/>
        public void deployServerConfigAsync(long serverId, string properties, object userState) {
            if ((this.deployServerConfigOperationCompleted == null)) {
                this.deployServerConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeployServerConfigOperationCompleted);
            }
            this.InvokeAsync("deployServerConfig", new object[] {
                        serverId,
                        properties}, this.deployServerConfigOperationCompleted, userState);
        }
        
        private void OndeployServerConfigOperationCompleted(object arg) {
            if ((this.deployServerConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deployServerConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deployServerServices(long serverId, string services) {
            this.Invoke("deployServerServices", new object[] {
                        serverId,
                        services});
        }
        
        /// <remarks/>
        public void deployServerServicesAsync(long serverId, string services) {
            this.deployServerServicesAsync(serverId, services, null);
        }
        
        /// <remarks/>
        public void deployServerServicesAsync(long serverId, string services, object userState) {
            if ((this.deployServerServicesOperationCompleted == null)) {
                this.deployServerServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeployServerServicesOperationCompleted);
            }
            this.InvokeAsync("deployServerServices", new object[] {
                        serverId,
                        services}, this.deployServerServicesOperationCompleted, userState);
        }
        
        private void OndeployServerServicesOperationCompleted(object arg) {
            if ((this.deployServerServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deployServerServicesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void editXHAPair(long xHAServerId, string name, string properties) {
            this.Invoke("editXHAPair", new object[] {
                        xHAServerId,
                        name,
                        properties});
        }
        
        /// <remarks/>
        public void editXHAPairAsync(long xHAServerId, string name, string properties) {
            this.editXHAPairAsync(xHAServerId, name, properties, null);
        }
        
        /// <remarks/>
        public void editXHAPairAsync(long xHAServerId, string name, string properties, object userState) {
            if ((this.editXHAPairOperationCompleted == null)) {
                this.editXHAPairOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditXHAPairOperationCompleted);
            }
            this.InvokeAsync("editXHAPair", new object[] {
                        xHAServerId,
                        name,
                        properties}, this.editXHAPairOperationCompleted, userState);
        }
        
        private void OneditXHAPairOperationCompleted(object arg) {
            if ((this.editXHAPairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editXHAPairCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void failoverXHA(long xHAServerId) {
            this.Invoke("failoverXHA", new object[] {
                        xHAServerId});
        }
        
        /// <remarks/>
        public void failoverXHAAsync(long xHAServerId) {
            this.failoverXHAAsync(xHAServerId, null);
        }
        
        /// <remarks/>
        public void failoverXHAAsync(long xHAServerId, object userState) {
            if ((this.failoverXHAOperationCompleted == null)) {
                this.failoverXHAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfailoverXHAOperationCompleted);
            }
            this.InvokeAsync("failoverXHA", new object[] {
                        xHAServerId}, this.failoverXHAOperationCompleted, userState);
        }
        
        private void OnfailoverXHAOperationCompleted(object arg) {
            if ((this.failoverXHACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.failoverXHACompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIAccessRight getAccessRight(long entityId, long userId) {
            object[] results = this.Invoke("getAccessRight", new object[] {
                        entityId,
                        userId});
            return ((APIAccessRight)(results[0]));
        }
        
        /// <remarks/>
        public void getAccessRightAsync(long entityId, long userId) {
            this.getAccessRightAsync(entityId, userId, null);
        }
        
        /// <remarks/>
        public void getAccessRightAsync(long entityId, long userId, object userState) {
            if ((this.getAccessRightOperationCompleted == null)) {
                this.getAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessRightOperationCompleted);
            }
            this.InvokeAsync("getAccessRight", new object[] {
                        entityId,
                        userId}, this.getAccessRightOperationCompleted, userState);
        }
        
        private void OngetAccessRightOperationCompleted(object arg) {
            if ((this.getAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessRightCompleted(this, new getAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIAccessRight[] getAccessRightsForEntity(long entityId, int start, int count) {
            object[] results = this.Invoke("getAccessRightsForEntity", new object[] {
                        entityId,
                        start,
                        count});
            return ((APIAccessRight[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccessRightsForEntityAsync(long entityId, int start, int count) {
            this.getAccessRightsForEntityAsync(entityId, start, count, null);
        }
        
        /// <remarks/>
        public void getAccessRightsForEntityAsync(long entityId, int start, int count, object userState) {
            if ((this.getAccessRightsForEntityOperationCompleted == null)) {
                this.getAccessRightsForEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessRightsForEntityOperationCompleted);
            }
            this.InvokeAsync("getAccessRightsForEntity", new object[] {
                        entityId,
                        start,
                        count}, this.getAccessRightsForEntityOperationCompleted, userState);
        }
        
        private void OngetAccessRightsForEntityOperationCompleted(object arg) {
            if ((this.getAccessRightsForEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessRightsForEntityCompleted(this, new getAccessRightsForEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIAccessRight[] getAccessRightsForUser(long userId, int start, int count) {
            object[] results = this.Invoke("getAccessRightsForUser", new object[] {
                        userId,
                        start,
                        count});
            return ((APIAccessRight[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccessRightsForUserAsync(long userId, int start, int count) {
            this.getAccessRightsForUserAsync(userId, start, count, null);
        }
        
        /// <remarks/>
        public void getAccessRightsForUserAsync(long userId, int start, int count, object userState) {
            if ((this.getAccessRightsForUserOperationCompleted == null)) {
                this.getAccessRightsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessRightsForUserOperationCompleted);
            }
            this.InvokeAsync("getAccessRightsForUser", new object[] {
                        userId,
                        start,
                        count}, this.getAccessRightsForUserOperationCompleted, userState);
        }
        
        private void OngetAccessRightsForUserOperationCompleted(object arg) {
            if ((this.getAccessRightsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessRightsForUserCompleted(this, new getAccessRightsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getAliasesByHint(int start, int count, string options) {
            object[] results = this.Invoke("getAliasesByHint", new object[] {
                        start,
                        count,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getAliasesByHintAsync(int start, int count, string options) {
            this.getAliasesByHintAsync(start, count, options, null);
        }
        
        /// <remarks/>
        public void getAliasesByHintAsync(int start, int count, string options, object userState) {
            if ((this.getAliasesByHintOperationCompleted == null)) {
                this.getAliasesByHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAliasesByHintOperationCompleted);
            }
            this.InvokeAsync("getAliasesByHint", new object[] {
                        start,
                        count,
                        options}, this.getAliasesByHintOperationCompleted, userState);
        }
        
        private void OngetAliasesByHintOperationCompleted(object arg) {
            if ((this.getAliasesByHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAliasesByHintCompleted(this, new getAliasesByHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDHCP6ClientDeploymentOption(long entityId, string name, long serverId) {
            object[] results = this.Invoke("getDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCP6ClientDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.getDHCP6ClientDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void getDHCP6ClientDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.getDHCP6ClientDeploymentOptionOperationCompleted == null)) {
                this.getDHCP6ClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCP6ClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDHCP6ClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.getDHCP6ClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDHCP6ClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDHCP6ClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCP6ClientDeploymentOptionCompleted(this, new getDHCP6ClientDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDHCP6ServiceDeploymentOption(long entityId, string name, long serverId) {
            object[] results = this.Invoke("getDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCP6ServiceDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.getDHCP6ServiceDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void getDHCP6ServiceDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.getDHCP6ServiceDeploymentOptionOperationCompleted == null)) {
                this.getDHCP6ServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCP6ServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDHCP6ServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.getDHCP6ServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDHCP6ServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDHCP6ServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCP6ServiceDeploymentOptionCompleted(this, new getDHCP6ServiceDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDHCPClientDeploymentOption(long entityId, string name, long serverId) {
            object[] results = this.Invoke("getDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCPClientDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.getDHCPClientDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void getDHCPClientDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.getDHCPClientDeploymentOptionOperationCompleted == null)) {
                this.getDHCPClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCPClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDHCPClientDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.getDHCPClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDHCPClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDHCPClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCPClientDeploymentOptionCompleted(this, new getDHCPClientDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentRole getDHCPDeploymentRole(long entityId, long serverInterfaceId) {
            object[] results = this.Invoke("getDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId});
            return ((APIDeploymentRole)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId) {
            this.getDHCPDeploymentRoleAsync(entityId, serverInterfaceId, null);
        }
        
        /// <remarks/>
        public void getDHCPDeploymentRoleAsync(long entityId, long serverInterfaceId, object userState) {
            if ((this.getDHCPDeploymentRoleOperationCompleted == null)) {
                this.getDHCPDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCPDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("getDHCPDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId}, this.getDHCPDeploymentRoleOperationCompleted, userState);
        }
        
        private void OngetDHCPDeploymentRoleOperationCompleted(object arg) {
            if ((this.getDHCPDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCPDeploymentRoleCompleted(this, new getDHCPDeploymentRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDHCPServiceDeploymentOption(long entityId, string name, long serverId) {
            object[] results = this.Invoke("getDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCPServiceDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.getDHCPServiceDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void getDHCPServiceDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.getDHCPServiceDeploymentOptionOperationCompleted == null)) {
                this.getDHCPServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCPServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDHCPServiceDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.getDHCPServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDHCPServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDHCPServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCPServiceDeploymentOptionCompleted(this, new getDHCPServiceDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDHCPVendorDeploymentOption(long entityId, long optionId, long serverId) {
            object[] results = this.Invoke("getDHCPVendorDeploymentOption", new object[] {
                        entityId,
                        optionId,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDHCPVendorDeploymentOptionAsync(long entityId, long optionId, long serverId) {
            this.getDHCPVendorDeploymentOptionAsync(entityId, optionId, serverId, null);
        }
        
        /// <remarks/>
        public void getDHCPVendorDeploymentOptionAsync(long entityId, long optionId, long serverId, object userState) {
            if ((this.getDHCPVendorDeploymentOptionOperationCompleted == null)) {
                this.getDHCPVendorDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDHCPVendorDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDHCPVendorDeploymentOption", new object[] {
                        entityId,
                        optionId,
                        serverId}, this.getDHCPVendorDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDHCPVendorDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDHCPVendorDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDHCPVendorDeploymentOptionCompleted(this, new getDHCPVendorDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentOption getDNSDeploymentOption(long entityId, string name, long serverId) {
            object[] results = this.Invoke("getDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId});
            return ((APIDeploymentOption)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSDeploymentOptionAsync(long entityId, string name, long serverId) {
            this.getDNSDeploymentOptionAsync(entityId, name, serverId, null);
        }
        
        /// <remarks/>
        public void getDNSDeploymentOptionAsync(long entityId, string name, long serverId, object userState) {
            if ((this.getDNSDeploymentOptionOperationCompleted == null)) {
                this.getDNSDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("getDNSDeploymentOption", new object[] {
                        entityId,
                        name,
                        serverId}, this.getDNSDeploymentOptionOperationCompleted, userState);
        }
        
        private void OngetDNSDeploymentOptionOperationCompleted(object arg) {
            if ((this.getDNSDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSDeploymentOptionCompleted(this, new getDNSDeploymentOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentRole getDNSDeploymentRole(long entityId, long serverInterfaceId) {
            object[] results = this.Invoke("getDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId});
            return ((APIDeploymentRole)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSDeploymentRoleAsync(long entityId, long serverInterfaceId) {
            this.getDNSDeploymentRoleAsync(entityId, serverInterfaceId, null);
        }
        
        /// <remarks/>
        public void getDNSDeploymentRoleAsync(long entityId, long serverInterfaceId, object userState) {
            if ((this.getDNSDeploymentRoleOperationCompleted == null)) {
                this.getDNSDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("getDNSDeploymentRole", new object[] {
                        entityId,
                        serverInterfaceId}, this.getDNSDeploymentRoleOperationCompleted, userState);
        }
        
        private void OngetDNSDeploymentRoleOperationCompleted(object arg) {
            if ((this.getDNSDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSDeploymentRoleCompleted(this, new getDNSDeploymentRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIDeploymentRole getDNSDeploymentRoleForView(long entityId, long serverInterfaceId, long viewId) {
            object[] results = this.Invoke("getDNSDeploymentRoleForView", new object[] {
                        entityId,
                        serverInterfaceId,
                        viewId});
            return ((APIDeploymentRole)(results[0]));
        }
        
        /// <remarks/>
        public void getDNSDeploymentRoleForViewAsync(long entityId, long serverInterfaceId, long viewId) {
            this.getDNSDeploymentRoleForViewAsync(entityId, serverInterfaceId, viewId, null);
        }
        
        /// <remarks/>
        public void getDNSDeploymentRoleForViewAsync(long entityId, long serverInterfaceId, long viewId, object userState) {
            if ((this.getDNSDeploymentRoleForViewOperationCompleted == null)) {
                this.getDNSDeploymentRoleForViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDNSDeploymentRoleForViewOperationCompleted);
            }
            this.InvokeAsync("getDNSDeploymentRoleForView", new object[] {
                        entityId,
                        serverInterfaceId,
                        viewId}, this.getDNSDeploymentRoleForViewOperationCompleted, userState);
        }
        
        private void OngetDNSDeploymentRoleForViewOperationCompleted(object arg) {
            if ((this.getDNSDeploymentRoleForViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDNSDeploymentRoleForViewCompleted(this, new getDNSDeploymentRoleForViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getDependentRecords(long entityId, int start, int count) {
            object[] results = this.Invoke("getDependentRecords", new object[] {
                        entityId,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getDependentRecordsAsync(long entityId, int start, int count) {
            this.getDependentRecordsAsync(entityId, start, count, null);
        }
        
        /// <remarks/>
        public void getDependentRecordsAsync(long entityId, int start, int count, object userState) {
            if ((this.getDependentRecordsOperationCompleted == null)) {
                this.getDependentRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDependentRecordsOperationCompleted);
            }
            this.InvokeAsync("getDependentRecords", new object[] {
                        entityId,
                        start,
                        count}, this.getDependentRecordsOperationCompleted, userState);
        }
        
        private void OngetDependentRecordsOperationCompleted(object arg) {
            if ((this.getDependentRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDependentRecordsCompleted(this, new getDependentRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIDeploymentOption[] getDeploymentOptions(long entityId, string optionTypes, long serverId) {
            object[] results = this.Invoke("getDeploymentOptions", new object[] {
                        entityId,
                        optionTypes,
                        serverId});
            return ((APIDeploymentOption[])(results[0]));
        }
        
        /// <remarks/>
        public void getDeploymentOptionsAsync(long entityId, string optionTypes, long serverId) {
            this.getDeploymentOptionsAsync(entityId, optionTypes, serverId, null);
        }
        
        /// <remarks/>
        public void getDeploymentOptionsAsync(long entityId, string optionTypes, long serverId, object userState) {
            if ((this.getDeploymentOptionsOperationCompleted == null)) {
                this.getDeploymentOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeploymentOptionsOperationCompleted);
            }
            this.InvokeAsync("getDeploymentOptions", new object[] {
                        entityId,
                        optionTypes,
                        serverId}, this.getDeploymentOptionsOperationCompleted, userState);
        }
        
        private void OngetDeploymentOptionsOperationCompleted(object arg) {
            if ((this.getDeploymentOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeploymentOptionsCompleted(this, new getDeploymentOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIDeploymentRole[] getDeploymentRoles(long entityId) {
            object[] results = this.Invoke("getDeploymentRoles", new object[] {
                        entityId});
            return ((APIDeploymentRole[])(results[0]));
        }
        
        /// <remarks/>
        public void getDeploymentRolesAsync(long entityId) {
            this.getDeploymentRolesAsync(entityId, null);
        }
        
        /// <remarks/>
        public void getDeploymentRolesAsync(long entityId, object userState) {
            if ((this.getDeploymentRolesOperationCompleted == null)) {
                this.getDeploymentRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeploymentRolesOperationCompleted);
            }
            this.InvokeAsync("getDeploymentRoles", new object[] {
                        entityId}, this.getDeploymentRolesOperationCompleted, userState);
        }
        
        private void OngetDeploymentRolesOperationCompleted(object arg) {
            if ((this.getDeploymentRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeploymentRolesCompleted(this, new getDeploymentRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getEntities(long parentId, string type, int start, int count) {
            object[] results = this.Invoke("getEntities", new object[] {
                        parentId,
                        type,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesAsync(long parentId, string type, int start, int count) {
            this.getEntitiesAsync(parentId, type, start, count, null);
        }
        
        /// <remarks/>
        public void getEntitiesAsync(long parentId, string type, int start, int count, object userState) {
            if ((this.getEntitiesOperationCompleted == null)) {
                this.getEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesOperationCompleted);
            }
            this.InvokeAsync("getEntities", new object[] {
                        parentId,
                        type,
                        start,
                        count}, this.getEntitiesOperationCompleted, userState);
        }
        
        private void OngetEntitiesOperationCompleted(object arg) {
            if ((this.getEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesCompleted(this, new getEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getEntitiesByName(long parentId, string name, string type, int start, int count) {
            object[] results = this.Invoke("getEntitiesByName", new object[] {
                        parentId,
                        name,
                        type,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesByNameAsync(long parentId, string name, string type, int start, int count) {
            this.getEntitiesByNameAsync(parentId, name, type, start, count, null);
        }
        
        /// <remarks/>
        public void getEntitiesByNameAsync(long parentId, string name, string type, int start, int count, object userState) {
            if ((this.getEntitiesByNameOperationCompleted == null)) {
                this.getEntitiesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesByNameOperationCompleted);
            }
            this.InvokeAsync("getEntitiesByName", new object[] {
                        parentId,
                        name,
                        type,
                        start,
                        count}, this.getEntitiesByNameOperationCompleted, userState);
        }
        
        private void OngetEntitiesByNameOperationCompleted(object arg) {
            if ((this.getEntitiesByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesByNameCompleted(this, new getEntitiesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getEntitiesByNameUsingOptions(long parentId, string name, string type, int start, int count, string options) {
            object[] results = this.Invoke("getEntitiesByNameUsingOptions", new object[] {
                        parentId,
                        name,
                        type,
                        start,
                        count,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesByNameUsingOptionsAsync(long parentId, string name, string type, int start, int count, string options) {
            this.getEntitiesByNameUsingOptionsAsync(parentId, name, type, start, count, options, null);
        }
        
        /// <remarks/>
        public void getEntitiesByNameUsingOptionsAsync(long parentId, string name, string type, int start, int count, string options, object userState) {
            if ((this.getEntitiesByNameUsingOptionsOperationCompleted == null)) {
                this.getEntitiesByNameUsingOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesByNameUsingOptionsOperationCompleted);
            }
            this.InvokeAsync("getEntitiesByNameUsingOptions", new object[] {
                        parentId,
                        name,
                        type,
                        start,
                        count,
                        options}, this.getEntitiesByNameUsingOptionsOperationCompleted, userState);
        }
        
        private void OngetEntitiesByNameUsingOptionsOperationCompleted(object arg) {
            if ((this.getEntitiesByNameUsingOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesByNameUsingOptionsCompleted(this, new getEntitiesByNameUsingOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getEntityByCIDR(long parentId, string cidr, string type) {
            object[] results = this.Invoke("getEntityByCIDR", new object[] {
                        parentId,
                        cidr,
                        type});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityByCIDRAsync(long parentId, string cidr, string type) {
            this.getEntityByCIDRAsync(parentId, cidr, type, null);
        }
        
        /// <remarks/>
        public void getEntityByCIDRAsync(long parentId, string cidr, string type, object userState) {
            if ((this.getEntityByCIDROperationCompleted == null)) {
                this.getEntityByCIDROperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityByCIDROperationCompleted);
            }
            this.InvokeAsync("getEntityByCIDR", new object[] {
                        parentId,
                        cidr,
                        type}, this.getEntityByCIDROperationCompleted, userState);
        }
        
        private void OngetEntityByCIDROperationCompleted(object arg) {
            if ((this.getEntityByCIDRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityByCIDRCompleted(this, new getEntityByCIDRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getEntityById(long id) {
            object[] results = this.Invoke("getEntityById", new object[] {
                        id});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityByIdAsync(long id) {
            this.getEntityByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void getEntityByIdAsync(long id, object userState) {
            if ((this.getEntityByIdOperationCompleted == null)) {
                this.getEntityByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityByIdOperationCompleted);
            }
            this.InvokeAsync("getEntityById", new object[] {
                        id}, this.getEntityByIdOperationCompleted, userState);
        }
        
        private void OngetEntityByIdOperationCompleted(object arg) {
            if ((this.getEntityByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityByIdCompleted(this, new getEntityByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getEntityByName(long parentId, string name, string type) {
            object[] results = this.Invoke("getEntityByName", new object[] {
                        parentId,
                        name,
                        type});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityByNameAsync(long parentId, string name, string type) {
            this.getEntityByNameAsync(parentId, name, type, null);
        }
        
        /// <remarks/>
        public void getEntityByNameAsync(long parentId, string name, string type, object userState) {
            if ((this.getEntityByNameOperationCompleted == null)) {
                this.getEntityByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityByNameOperationCompleted);
            }
            this.InvokeAsync("getEntityByName", new object[] {
                        parentId,
                        name,
                        type}, this.getEntityByNameOperationCompleted, userState);
        }
        
        private void OngetEntityByNameOperationCompleted(object arg) {
            if ((this.getEntityByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityByNameCompleted(this, new getEntityByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getEntityByPrefix(long containerId, string prefix, string type) {
            object[] results = this.Invoke("getEntityByPrefix", new object[] {
                        containerId,
                        prefix,
                        type});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityByPrefixAsync(long containerId, string prefix, string type) {
            this.getEntityByPrefixAsync(containerId, prefix, type, null);
        }
        
        /// <remarks/>
        public void getEntityByPrefixAsync(long containerId, string prefix, string type, object userState) {
            if ((this.getEntityByPrefixOperationCompleted == null)) {
                this.getEntityByPrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityByPrefixOperationCompleted);
            }
            this.InvokeAsync("getEntityByPrefix", new object[] {
                        containerId,
                        prefix,
                        type}, this.getEntityByPrefixOperationCompleted, userState);
        }
        
        private void OngetEntityByPrefixOperationCompleted(object arg) {
            if ((this.getEntityByPrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityByPrefixCompleted(this, new getEntityByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getEntityByRange(long parentId, string address1, string address2, string type) {
            object[] results = this.Invoke("getEntityByRange", new object[] {
                        parentId,
                        address1,
                        address2,
                        type});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityByRangeAsync(long parentId, string address1, string address2, string type) {
            this.getEntityByRangeAsync(parentId, address1, address2, type, null);
        }
        
        /// <remarks/>
        public void getEntityByRangeAsync(long parentId, string address1, string address2, string type, object userState) {
            if ((this.getEntityByRangeOperationCompleted == null)) {
                this.getEntityByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityByRangeOperationCompleted);
            }
            this.InvokeAsync("getEntityByRange", new object[] {
                        parentId,
                        address1,
                        address2,
                        type}, this.getEntityByRangeOperationCompleted, userState);
        }
        
        private void OngetEntityByRangeOperationCompleted(object arg) {
            if ((this.getEntityByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityByRangeCompleted(this, new getEntityByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getHostRecordsByHint(int start, int count, string options) {
            object[] results = this.Invoke("getHostRecordsByHint", new object[] {
                        start,
                        count,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getHostRecordsByHintAsync(int start, int count, string options) {
            this.getHostRecordsByHintAsync(start, count, options, null);
        }
        
        /// <remarks/>
        public void getHostRecordsByHintAsync(int start, int count, string options, object userState) {
            if ((this.getHostRecordsByHintOperationCompleted == null)) {
                this.getHostRecordsByHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHostRecordsByHintOperationCompleted);
            }
            this.InvokeAsync("getHostRecordsByHint", new object[] {
                        start,
                        count,
                        options}, this.getHostRecordsByHintOperationCompleted, userState);
        }
        
        private void OngetHostRecordsByHintOperationCompleted(object arg) {
            if ((this.getHostRecordsByHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHostRecordsByHintCompleted(this, new getHostRecordsByHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getIP4Address(long containerId, string address) {
            object[] results = this.Invoke("getIP4Address", new object[] {
                        containerId,
                        address});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getIP4AddressAsync(long containerId, string address) {
            this.getIP4AddressAsync(containerId, address, null);
        }
        
        /// <remarks/>
        public void getIP4AddressAsync(long containerId, string address, object userState) {
            if ((this.getIP4AddressOperationCompleted == null)) {
                this.getIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIP4AddressOperationCompleted);
            }
            this.InvokeAsync("getIP4Address", new object[] {
                        containerId,
                        address}, this.getIP4AddressOperationCompleted, userState);
        }
        
        private void OngetIP4AddressOperationCompleted(object arg) {
            if ((this.getIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIP4AddressCompleted(this, new getIP4AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getIP4NetworksByHint(long containerId, int start, int count, string options) {
            object[] results = this.Invoke("getIP4NetworksByHint", new object[] {
                        containerId,
                        start,
                        count,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getIP4NetworksByHintAsync(long containerId, int start, int count, string options) {
            this.getIP4NetworksByHintAsync(containerId, start, count, options, null);
        }
        
        /// <remarks/>
        public void getIP4NetworksByHintAsync(long containerId, int start, int count, string options, object userState) {
            if ((this.getIP4NetworksByHintOperationCompleted == null)) {
                this.getIP4NetworksByHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIP4NetworksByHintOperationCompleted);
            }
            this.InvokeAsync("getIP4NetworksByHint", new object[] {
                        containerId,
                        start,
                        count,
                        options}, this.getIP4NetworksByHintOperationCompleted, userState);
        }
        
        private void OngetIP4NetworksByHintOperationCompleted(object arg) {
            if ((this.getIP4NetworksByHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIP4NetworksByHintCompleted(this, new getIP4NetworksByHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getIP6Address(long containerId, string address) {
            object[] results = this.Invoke("getIP6Address", new object[] {
                        containerId,
                        address});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getIP6AddressAsync(long containerId, string address) {
            this.getIP6AddressAsync(containerId, address, null);
        }
        
        /// <remarks/>
        public void getIP6AddressAsync(long containerId, string address, object userState) {
            if ((this.getIP6AddressOperationCompleted == null)) {
                this.getIP6AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIP6AddressOperationCompleted);
            }
            this.InvokeAsync("getIP6Address", new object[] {
                        containerId,
                        address}, this.getIP6AddressOperationCompleted, userState);
        }
        
        private void OngetIP6AddressOperationCompleted(object arg) {
            if ((this.getIP6AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIP6AddressCompleted(this, new getIP6AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getIPRangedByIP(long containerId, string type, string address) {
            object[] results = this.Invoke("getIPRangedByIP", new object[] {
                        containerId,
                        type,
                        address});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getIPRangedByIPAsync(long containerId, string type, string address) {
            this.getIPRangedByIPAsync(containerId, type, address, null);
        }
        
        /// <remarks/>
        public void getIPRangedByIPAsync(long containerId, string type, string address, object userState) {
            if ((this.getIPRangedByIPOperationCompleted == null)) {
                this.getIPRangedByIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIPRangedByIPOperationCompleted);
            }
            this.InvokeAsync("getIPRangedByIP", new object[] {
                        containerId,
                        type,
                        address}, this.getIPRangedByIPOperationCompleted, userState);
        }
        
        private void OngetIPRangedByIPOperationCompleted(object arg) {
            if ((this.getIPRangedByIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIPRangedByIPCompleted(this, new getIPRangedByIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getKSK(long entityId, string format) {
            object[] results = this.Invoke("getKSK", new object[] {
                        entityId,
                        format});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getKSKAsync(long entityId, string format) {
            this.getKSKAsync(entityId, format, null);
        }
        
        /// <remarks/>
        public void getKSKAsync(long entityId, string format, object userState) {
            if ((this.getKSKOperationCompleted == null)) {
                this.getKSKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKSKOperationCompleted);
            }
            this.InvokeAsync("getKSK", new object[] {
                        entityId,
                        format}, this.getKSKOperationCompleted, userState);
        }
        
        private void OngetKSKOperationCompleted(object arg) {
            if ((this.getKSKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKSKCompleted(this, new getKSKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getLinkedEntities(long entityId, string type, int start, int count) {
            object[] results = this.Invoke("getLinkedEntities", new object[] {
                        entityId,
                        type,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getLinkedEntitiesAsync(long entityId, string type, int start, int count) {
            this.getLinkedEntitiesAsync(entityId, type, start, count, null);
        }
        
        /// <remarks/>
        public void getLinkedEntitiesAsync(long entityId, string type, int start, int count, object userState) {
            if ((this.getLinkedEntitiesOperationCompleted == null)) {
                this.getLinkedEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLinkedEntitiesOperationCompleted);
            }
            this.InvokeAsync("getLinkedEntities", new object[] {
                        entityId,
                        type,
                        start,
                        count}, this.getLinkedEntitiesOperationCompleted, userState);
        }
        
        private void OngetLinkedEntitiesOperationCompleted(object arg) {
            if ((this.getLinkedEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLinkedEntitiesCompleted(this, new getLinkedEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getMACAddress(long configurationId, string macAddress) {
            object[] results = this.Invoke("getMACAddress", new object[] {
                        configurationId,
                        macAddress});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getMACAddressAsync(long configurationId, string macAddress) {
            this.getMACAddressAsync(configurationId, macAddress, null);
        }
        
        /// <remarks/>
        public void getMACAddressAsync(long configurationId, string macAddress, object userState) {
            if ((this.getMACAddressOperationCompleted == null)) {
                this.getMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMACAddressOperationCompleted);
            }
            this.InvokeAsync("getMACAddress", new object[] {
                        configurationId,
                        macAddress}, this.getMACAddressOperationCompleted, userState);
        }
        
        private void OngetMACAddressOperationCompleted(object arg) {
            if ((this.getMACAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMACAddressCompleted(this, new getMACAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getMACAddressesInPool(long macPoolId, int start, int count) {
            object[] results = this.Invoke("getMACAddressesInPool", new object[] {
                        macPoolId,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getMACAddressesInPoolAsync(long macPoolId, int start, int count) {
            this.getMACAddressesInPoolAsync(macPoolId, start, count, null);
        }
        
        /// <remarks/>
        public void getMACAddressesInPoolAsync(long macPoolId, int start, int count, object userState) {
            if ((this.getMACAddressesInPoolOperationCompleted == null)) {
                this.getMACAddressesInPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMACAddressesInPoolOperationCompleted);
            }
            this.InvokeAsync("getMACAddressesInPool", new object[] {
                        macPoolId,
                        start,
                        count}, this.getMACAddressesInPoolOperationCompleted, userState);
        }
        
        private void OngetMACAddressesInPoolOperationCompleted(object arg) {
            if ((this.getMACAddressesInPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMACAddressesInPoolCompleted(this, new getMACAddressesInPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getMaxAllowedRange(long rangeId) {
            object[] results = this.Invoke("getMaxAllowedRange", new object[] {
                        rangeId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getMaxAllowedRangeAsync(long rangeId) {
            this.getMaxAllowedRangeAsync(rangeId, null);
        }
        
        /// <remarks/>
        public void getMaxAllowedRangeAsync(long rangeId, object userState) {
            if ((this.getMaxAllowedRangeOperationCompleted == null)) {
                this.getMaxAllowedRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMaxAllowedRangeOperationCompleted);
            }
            this.InvokeAsync("getMaxAllowedRange", new object[] {
                        rangeId}, this.getMaxAllowedRangeOperationCompleted, userState);
        }
        
        private void OngetMaxAllowedRangeOperationCompleted(object arg) {
            if ((this.getMaxAllowedRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMaxAllowedRangeCompleted(this, new getMaxAllowedRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getNetworkLinkedProperties(long networkId) {
            object[] results = this.Invoke("getNetworkLinkedProperties", new object[] {
                        networkId});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getNetworkLinkedPropertiesAsync(long networkId) {
            this.getNetworkLinkedPropertiesAsync(networkId, null);
        }
        
        /// <remarks/>
        public void getNetworkLinkedPropertiesAsync(long networkId, object userState) {
            if ((this.getNetworkLinkedPropertiesOperationCompleted == null)) {
                this.getNetworkLinkedPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNetworkLinkedPropertiesOperationCompleted);
            }
            this.InvokeAsync("getNetworkLinkedProperties", new object[] {
                        networkId}, this.getNetworkLinkedPropertiesOperationCompleted, userState);
        }
        
        private void OngetNetworkLinkedPropertiesOperationCompleted(object arg) {
            if ((this.getNetworkLinkedPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNetworkLinkedPropertiesCompleted(this, new getNetworkLinkedPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getNextAvailableIP4Address(long parentId) {
            object[] results = this.Invoke("getNextAvailableIP4Address", new object[] {
                        parentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNextAvailableIP4AddressAsync(long parentId) {
            this.getNextAvailableIP4AddressAsync(parentId, null);
        }
        
        /// <remarks/>
        public void getNextAvailableIP4AddressAsync(long parentId, object userState) {
            if ((this.getNextAvailableIP4AddressOperationCompleted == null)) {
                this.getNextAvailableIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextAvailableIP4AddressOperationCompleted);
            }
            this.InvokeAsync("getNextAvailableIP4Address", new object[] {
                        parentId}, this.getNextAvailableIP4AddressOperationCompleted, userState);
        }
        
        private void OngetNextAvailableIP4AddressOperationCompleted(object arg) {
            if ((this.getNextAvailableIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextAvailableIP4AddressCompleted(this, new getNextAvailableIP4AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long getNextAvailableIP4Network(long parentId, long size, bool isLargerAllowed, bool autoCreate) {
            object[] results = this.Invoke("getNextAvailableIP4Network", new object[] {
                        parentId,
                        size,
                        isLargerAllowed,
                        autoCreate});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getNextAvailableIP4NetworkAsync(long parentId, long size, bool isLargerAllowed, bool autoCreate) {
            this.getNextAvailableIP4NetworkAsync(parentId, size, isLargerAllowed, autoCreate, null);
        }
        
        /// <remarks/>
        public void getNextAvailableIP4NetworkAsync(long parentId, long size, bool isLargerAllowed, bool autoCreate, object userState) {
            if ((this.getNextAvailableIP4NetworkOperationCompleted == null)) {
                this.getNextAvailableIP4NetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextAvailableIP4NetworkOperationCompleted);
            }
            this.InvokeAsync("getNextAvailableIP4Network", new object[] {
                        parentId,
                        size,
                        isLargerAllowed,
                        autoCreate}, this.getNextAvailableIP4NetworkOperationCompleted, userState);
        }
        
        private void OngetNextAvailableIP4NetworkOperationCompleted(object arg) {
            if ((this.getNextAvailableIP4NetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextAvailableIP4NetworkCompleted(this, new getNextAvailableIP4NetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getNextAvailableIPRange(long parentId, long size, string type, string properties) {
            object[] results = this.Invoke("getNextAvailableIPRange", new object[] {
                        parentId,
                        size,
                        type,
                        properties});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getNextAvailableIPRangeAsync(long parentId, long size, string type, string properties) {
            this.getNextAvailableIPRangeAsync(parentId, size, type, properties, null);
        }
        
        /// <remarks/>
        public void getNextAvailableIPRangeAsync(long parentId, long size, string type, string properties, object userState) {
            if ((this.getNextAvailableIPRangeOperationCompleted == null)) {
                this.getNextAvailableIPRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextAvailableIPRangeOperationCompleted);
            }
            this.InvokeAsync("getNextAvailableIPRange", new object[] {
                        parentId,
                        size,
                        type,
                        properties}, this.getNextAvailableIPRangeOperationCompleted, userState);
        }
        
        private void OngetNextAvailableIPRangeOperationCompleted(object arg) {
            if ((this.getNextAvailableIPRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextAvailableIPRangeCompleted(this, new getNextAvailableIPRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getNextAvailableIPRanges(long parentId, long size, string type, int count, string properties) {
            object[] results = this.Invoke("getNextAvailableIPRanges", new object[] {
                        parentId,
                        size,
                        type,
                        count,
                        properties});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getNextAvailableIPRangesAsync(long parentId, long size, string type, int count, string properties) {
            this.getNextAvailableIPRangesAsync(parentId, size, type, count, properties, null);
        }
        
        /// <remarks/>
        public void getNextAvailableIPRangesAsync(long parentId, long size, string type, int count, string properties, object userState) {
            if ((this.getNextAvailableIPRangesOperationCompleted == null)) {
                this.getNextAvailableIPRangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextAvailableIPRangesOperationCompleted);
            }
            this.InvokeAsync("getNextAvailableIPRanges", new object[] {
                        parentId,
                        size,
                        type,
                        count,
                        properties}, this.getNextAvailableIPRangesOperationCompleted, userState);
        }
        
        private void OngetNextAvailableIPRangesOperationCompleted(object arg) {
            if ((this.getNextAvailableIPRangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextAvailableIPRangesCompleted(this, new getNextAvailableIPRangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getNextIP4Address(long parentId, string properties) {
            object[] results = this.Invoke("getNextIP4Address", new object[] {
                        parentId,
                        properties});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNextIP4AddressAsync(long parentId, string properties) {
            this.getNextIP4AddressAsync(parentId, properties, null);
        }
        
        /// <remarks/>
        public void getNextIP4AddressAsync(long parentId, string properties, object userState) {
            if ((this.getNextIP4AddressOperationCompleted == null)) {
                this.getNextIP4AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextIP4AddressOperationCompleted);
            }
            this.InvokeAsync("getNextIP4Address", new object[] {
                        parentId,
                        properties}, this.getNextIP4AddressOperationCompleted, userState);
        }
        
        private void OngetNextIP4AddressOperationCompleted(object arg) {
            if ((this.getNextIP4AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextIP4AddressCompleted(this, new getNextIP4AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getParent(long entityId) {
            object[] results = this.Invoke("getParent", new object[] {
                        entityId});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getParentAsync(long entityId) {
            this.getParentAsync(entityId, null);
        }
        
        /// <remarks/>
        public void getParentAsync(long entityId, object userState) {
            if ((this.getParentOperationCompleted == null)) {
                this.getParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentOperationCompleted);
            }
            this.InvokeAsync("getParent", new object[] {
                        entityId}, this.getParentOperationCompleted, userState);
        }
        
        private void OngetParentOperationCompleted(object arg) {
            if ((this.getParentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParentCompleted(this, new getParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIDeploymentRole[] getServerDeploymentRoles(long serverId) {
            object[] results = this.Invoke("getServerDeploymentRoles", new object[] {
                        serverId});
            return ((APIDeploymentRole[])(results[0]));
        }
        
        /// <remarks/>
        public void getServerDeploymentRolesAsync(long serverId) {
            this.getServerDeploymentRolesAsync(serverId, null);
        }
        
        /// <remarks/>
        public void getServerDeploymentRolesAsync(long serverId, object userState) {
            if ((this.getServerDeploymentRolesOperationCompleted == null)) {
                this.getServerDeploymentRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerDeploymentRolesOperationCompleted);
            }
            this.InvokeAsync("getServerDeploymentRoles", new object[] {
                        serverId}, this.getServerDeploymentRolesOperationCompleted, userState);
        }
        
        private void OngetServerDeploymentRolesOperationCompleted(object arg) {
            if ((this.getServerDeploymentRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerDeploymentRolesCompleted(this, new getServerDeploymentRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int getServerDeploymentStatus(long serverId, string properties) {
            object[] results = this.Invoke("getServerDeploymentStatus", new object[] {
                        serverId,
                        properties});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getServerDeploymentStatusAsync(long serverId, string properties) {
            this.getServerDeploymentStatusAsync(serverId, properties, null);
        }
        
        /// <remarks/>
        public void getServerDeploymentStatusAsync(long serverId, string properties, object userState) {
            if ((this.getServerDeploymentStatusOperationCompleted == null)) {
                this.getServerDeploymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerDeploymentStatusOperationCompleted);
            }
            this.InvokeAsync("getServerDeploymentStatus", new object[] {
                        serverId,
                        properties}, this.getServerDeploymentStatusOperationCompleted, userState);
        }
        
        private void OngetServerDeploymentStatusOperationCompleted(object arg) {
            if ((this.getServerDeploymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerDeploymentStatusCompleted(this, new getServerDeploymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public APIEntity getServerForRole(long roleId) {
            object[] results = this.Invoke("getServerForRole", new object[] {
                        roleId});
            return ((APIEntity)(results[0]));
        }
        
        /// <remarks/>
        public void getServerForRoleAsync(long roleId) {
            this.getServerForRoleAsync(roleId, null);
        }
        
        /// <remarks/>
        public void getServerForRoleAsync(long roleId, object userState) {
            if ((this.getServerForRoleOperationCompleted == null)) {
                this.getServerForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerForRoleOperationCompleted);
            }
            this.InvokeAsync("getServerForRole", new object[] {
                        roleId}, this.getServerForRoleOperationCompleted, userState);
        }
        
        private void OngetServerForRoleOperationCompleted(object arg) {
            if ((this.getServerForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerForRoleCompleted(this, new getServerForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getSystemInfo() {
            object[] results = this.Invoke("getSystemInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemInfoAsync() {
            this.getSystemInfoAsync(null);
        }
        
        /// <remarks/>
        public void getSystemInfoAsync(object userState) {
            if ((this.getSystemInfoOperationCompleted == null)) {
                this.getSystemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemInfo", new object[0], this.getSystemInfoOperationCompleted, userState);
        }
        
        private void OngetSystemInfoOperationCompleted(object arg) {
            if ((this.getSystemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemInfoCompleted(this, new getSystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIUserDefinedField[] getUserDefinedFields(string type, bool requiredFieldsOnly) {
            object[] results = this.Invoke("getUserDefinedFields", new object[] {
                        type,
                        requiredFieldsOnly});
            return ((APIUserDefinedField[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserDefinedFieldsAsync(string type, bool requiredFieldsOnly) {
            this.getUserDefinedFieldsAsync(type, requiredFieldsOnly, null);
        }
        
        /// <remarks/>
        public void getUserDefinedFieldsAsync(string type, bool requiredFieldsOnly, object userState) {
            if ((this.getUserDefinedFieldsOperationCompleted == null)) {
                this.getUserDefinedFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDefinedFieldsOperationCompleted);
            }
            this.InvokeAsync("getUserDefinedFields", new object[] {
                        type,
                        requiredFieldsOnly}, this.getUserDefinedFieldsOperationCompleted, userState);
        }
        
        private void OngetUserDefinedFieldsOperationCompleted(object arg) {
            if ((this.getUserDefinedFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDefinedFieldsCompleted(this, new getUserDefinedFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] getZonesByHint(long containerId, int start, int count, string options) {
            object[] results = this.Invoke("getZonesByHint", new object[] {
                        containerId,
                        start,
                        count,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void getZonesByHintAsync(long containerId, int start, int count, string options) {
            this.getZonesByHintAsync(containerId, start, count, options, null);
        }
        
        /// <remarks/>
        public void getZonesByHintAsync(long containerId, int start, int count, string options, object userState) {
            if ((this.getZonesByHintOperationCompleted == null)) {
                this.getZonesByHintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZonesByHintOperationCompleted);
            }
            this.InvokeAsync("getZonesByHint", new object[] {
                        containerId,
                        start,
                        count,
                        options}, this.getZonesByHintOperationCompleted, userState);
        }
        
        private void OngetZonesByHintOperationCompleted(object arg) {
            if ((this.getZonesByHintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZonesByHintCompleted(this, new getZonesByHintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void importServer(long serverId, bool importDns, bool importDhcp, string properties) {
            this.Invoke("importServer", new object[] {
                        serverId,
                        importDns,
                        importDhcp,
                        properties});
        }
        
        /// <remarks/>
        public void importServerAsync(long serverId, bool importDns, bool importDhcp, string properties) {
            this.importServerAsync(serverId, importDns, importDhcp, properties, null);
        }
        
        /// <remarks/>
        public void importServerAsync(long serverId, bool importDns, bool importDhcp, string properties, object userState) {
            if ((this.importServerOperationCompleted == null)) {
                this.importServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportServerOperationCompleted);
            }
            this.InvokeAsync("importServer", new object[] {
                        serverId,
                        importDns,
                        importDhcp,
                        properties}, this.importServerOperationCompleted, userState);
        }
        
        private void OnimportServerOperationCompleted(object arg) {
            if ((this.importServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isAddressAllocated(long configurationId, string ipAddress, string macAddress) {
            object[] results = this.Invoke("isAddressAllocated", new object[] {
                        configurationId,
                        ipAddress,
                        macAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAddressAllocatedAsync(long configurationId, string ipAddress, string macAddress) {
            this.isAddressAllocatedAsync(configurationId, ipAddress, macAddress, null);
        }
        
        /// <remarks/>
        public void isAddressAllocatedAsync(long configurationId, string ipAddress, string macAddress, object userState) {
            if ((this.isAddressAllocatedOperationCompleted == null)) {
                this.isAddressAllocatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAddressAllocatedOperationCompleted);
            }
            this.InvokeAsync("isAddressAllocated", new object[] {
                        configurationId,
                        ipAddress,
                        macAddress}, this.isAddressAllocatedOperationCompleted, userState);
        }
        
        private void OnisAddressAllocatedOperationCompleted(object arg) {
            if ((this.isAddressAllocatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAddressAllocatedCompleted(this, new isAddressAllocatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool isMigrationRunning(string filename) {
            object[] results = this.Invoke("isMigrationRunning", new object[] {
                        filename});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isMigrationRunningAsync(string filename) {
            this.isMigrationRunningAsync(filename, null);
        }
        
        /// <remarks/>
        public void isMigrationRunningAsync(string filename, object userState) {
            if ((this.isMigrationRunningOperationCompleted == null)) {
                this.isMigrationRunningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisMigrationRunningOperationCompleted);
            }
            this.InvokeAsync("isMigrationRunning", new object[] {
                        filename}, this.isMigrationRunningOperationCompleted, userState);
        }
        
        private void OnisMigrationRunningOperationCompleted(object arg) {
            if ((this.isMigrationRunningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isMigrationRunningCompleted(this, new isMigrationRunningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void linkEntities(long entity1Id, long entity2Id, string properties) {
            this.Invoke("linkEntities", new object[] {
                        entity1Id,
                        entity2Id,
                        properties});
        }
        
        /// <remarks/>
        public void linkEntitiesAsync(long entity1Id, long entity2Id, string properties) {
            this.linkEntitiesAsync(entity1Id, entity2Id, properties, null);
        }
        
        /// <remarks/>
        public void linkEntitiesAsync(long entity1Id, long entity2Id, string properties, object userState) {
            if ((this.linkEntitiesOperationCompleted == null)) {
                this.linkEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlinkEntitiesOperationCompleted);
            }
            this.InvokeAsync("linkEntities", new object[] {
                        entity1Id,
                        entity2Id,
                        properties}, this.linkEntitiesOperationCompleted, userState);
        }
        
        private void OnlinkEntitiesOperationCompleted(object arg) {
            if ((this.linkEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.linkEntitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void login(string username, string password) {
            this.Invoke("login", new object[] {
                        username,
                        password});
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password) {
            this.loginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        username,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void logout() {
            this.Invoke("logout", new object[0]);
        }
        
        /// <remarks/>
        public void logoutAsync() {
            this.logoutAsync(null);
        }
        
        /// <remarks/>
        public void logoutAsync(object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[0], this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void mergeBlocksWithParent([System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<long>[] blockIds) {
            this.Invoke("mergeBlocksWithParent", new object[] {
                        blockIds});
        }
        
        /// <remarks/>
        public void mergeBlocksWithParentAsync(System.Nullable<long>[] blockIds) {
            this.mergeBlocksWithParentAsync(blockIds, null);
        }
        
        /// <remarks/>
        public void mergeBlocksWithParentAsync(System.Nullable<long>[] blockIds, object userState) {
            if ((this.mergeBlocksWithParentOperationCompleted == null)) {
                this.mergeBlocksWithParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeBlocksWithParentOperationCompleted);
            }
            this.InvokeAsync("mergeBlocksWithParent", new object[] {
                        blockIds}, this.mergeBlocksWithParentOperationCompleted, userState);
        }
        
        private void OnmergeBlocksWithParentOperationCompleted(object arg) {
            if ((this.mergeBlocksWithParentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mergeBlocksWithParentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void mergeSelectedBlocksOrNetworks([System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<long>[] blockOrNetworkIds, long blockOrNetworkToKeep) {
            this.Invoke("mergeSelectedBlocksOrNetworks", new object[] {
                        blockOrNetworkIds,
                        blockOrNetworkToKeep});
        }
        
        /// <remarks/>
        public void mergeSelectedBlocksOrNetworksAsync(System.Nullable<long>[] blockOrNetworkIds, long blockOrNetworkToKeep) {
            this.mergeSelectedBlocksOrNetworksAsync(blockOrNetworkIds, blockOrNetworkToKeep, null);
        }
        
        /// <remarks/>
        public void mergeSelectedBlocksOrNetworksAsync(System.Nullable<long>[] blockOrNetworkIds, long blockOrNetworkToKeep, object userState) {
            if ((this.mergeSelectedBlocksOrNetworksOperationCompleted == null)) {
                this.mergeSelectedBlocksOrNetworksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmergeSelectedBlocksOrNetworksOperationCompleted);
            }
            this.InvokeAsync("mergeSelectedBlocksOrNetworks", new object[] {
                        blockOrNetworkIds,
                        blockOrNetworkToKeep}, this.mergeSelectedBlocksOrNetworksOperationCompleted, userState);
        }
        
        private void OnmergeSelectedBlocksOrNetworksOperationCompleted(object arg) {
            if ((this.mergeSelectedBlocksOrNetworksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mergeSelectedBlocksOrNetworksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void migrateFile(string filename) {
            this.Invoke("migrateFile", new object[] {
                        filename});
        }
        
        /// <remarks/>
        public void migrateFileAsync(string filename) {
            this.migrateFileAsync(filename, null);
        }
        
        /// <remarks/>
        public void migrateFileAsync(string filename, object userState) {
            if ((this.migrateFileOperationCompleted == null)) {
                this.migrateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmigrateFileOperationCompleted);
            }
            this.InvokeAsync("migrateFile", new object[] {
                        filename}, this.migrateFileOperationCompleted, userState);
        }
        
        private void OnmigrateFileOperationCompleted(object arg) {
            if ((this.migrateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.migrateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void moveDeploymentRoles(long sourceServerId, long targetServerInterfaceId, bool moveDnsRoles, bool moveDhcpRoles, string options) {
            this.Invoke("moveDeploymentRoles", new object[] {
                        sourceServerId,
                        targetServerInterfaceId,
                        moveDnsRoles,
                        moveDhcpRoles,
                        options});
        }
        
        /// <remarks/>
        public void moveDeploymentRolesAsync(long sourceServerId, long targetServerInterfaceId, bool moveDnsRoles, bool moveDhcpRoles, string options) {
            this.moveDeploymentRolesAsync(sourceServerId, targetServerInterfaceId, moveDnsRoles, moveDhcpRoles, options, null);
        }
        
        /// <remarks/>
        public void moveDeploymentRolesAsync(long sourceServerId, long targetServerInterfaceId, bool moveDnsRoles, bool moveDhcpRoles, string options, object userState) {
            if ((this.moveDeploymentRolesOperationCompleted == null)) {
                this.moveDeploymentRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveDeploymentRolesOperationCompleted);
            }
            this.InvokeAsync("moveDeploymentRoles", new object[] {
                        sourceServerId,
                        targetServerInterfaceId,
                        moveDnsRoles,
                        moveDhcpRoles,
                        options}, this.moveDeploymentRolesOperationCompleted, userState);
        }
        
        private void OnmoveDeploymentRolesOperationCompleted(object arg) {
            if ((this.moveDeploymentRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveDeploymentRolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void moveIP4Object(long objectId, string address) {
            this.Invoke("moveIP4Object", new object[] {
                        objectId,
                        address});
        }
        
        /// <remarks/>
        public void moveIP4ObjectAsync(long objectId, string address) {
            this.moveIP4ObjectAsync(objectId, address, null);
        }
        
        /// <remarks/>
        public void moveIP4ObjectAsync(long objectId, string address, object userState) {
            if ((this.moveIP4ObjectOperationCompleted == null)) {
                this.moveIP4ObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveIP4ObjectOperationCompleted);
            }
            this.InvokeAsync("moveIP4Object", new object[] {
                        objectId,
                        address}, this.moveIP4ObjectOperationCompleted, userState);
        }
        
        private void OnmoveIP4ObjectOperationCompleted(object arg) {
            if ((this.moveIP4ObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveIP4ObjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void moveIPObject(long objectId, string address, string options) {
            this.Invoke("moveIPObject", new object[] {
                        objectId,
                        address,
                        options});
        }
        
        /// <remarks/>
        public void moveIPObjectAsync(long objectId, string address, string options) {
            this.moveIPObjectAsync(objectId, address, options, null);
        }
        
        /// <remarks/>
        public void moveIPObjectAsync(long objectId, string address, string options, object userState) {
            if ((this.moveIPObjectOperationCompleted == null)) {
                this.moveIPObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveIPObjectOperationCompleted);
            }
            this.InvokeAsync("moveIPObject", new object[] {
                        objectId,
                        address,
                        options}, this.moveIPObjectOperationCompleted, userState);
        }
        
        private void OnmoveIPObjectOperationCompleted(object arg) {
            if ((this.moveIPObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveIPObjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void moveResourceRecord(long resourceRecordId, string destinationZone) {
            this.Invoke("moveResourceRecord", new object[] {
                        resourceRecordId,
                        destinationZone});
        }
        
        /// <remarks/>
        public void moveResourceRecordAsync(long resourceRecordId, string destinationZone) {
            this.moveResourceRecordAsync(resourceRecordId, destinationZone, null);
        }
        
        /// <remarks/>
        public void moveResourceRecordAsync(long resourceRecordId, string destinationZone, object userState) {
            if ((this.moveResourceRecordOperationCompleted == null)) {
                this.moveResourceRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveResourceRecordOperationCompleted);
            }
            this.InvokeAsync("moveResourceRecord", new object[] {
                        resourceRecordId,
                        destinationZone}, this.moveResourceRecordOperationCompleted, userState);
        }
        
        private void OnmoveResourceRecordOperationCompleted(object arg) {
            if ((this.moveResourceRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveResourceRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void quickDeploy(long entityId, string properties) {
            this.Invoke("quickDeploy", new object[] {
                        entityId,
                        properties});
        }
        
        /// <remarks/>
        public void quickDeployAsync(long entityId, string properties) {
            this.quickDeployAsync(entityId, properties, null);
        }
        
        /// <remarks/>
        public void quickDeployAsync(long entityId, string properties, object userState) {
            if ((this.quickDeployOperationCompleted == null)) {
                this.quickDeployOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickDeployOperationCompleted);
            }
            this.InvokeAsync("quickDeploy", new object[] {
                        entityId,
                        properties}, this.quickDeployOperationCompleted, userState);
        }
        
        private void OnquickDeployOperationCompleted(object arg) {
            if ((this.quickDeployCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickDeployCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void reapplyTemplate(long templateId, string properties) {
            this.Invoke("reapplyTemplate", new object[] {
                        templateId,
                        properties});
        }
        
        /// <remarks/>
        public void reapplyTemplateAsync(long templateId, string properties) {
            this.reapplyTemplateAsync(templateId, properties, null);
        }
        
        /// <remarks/>
        public void reapplyTemplateAsync(long templateId, string properties, object userState) {
            if ((this.reapplyTemplateOperationCompleted == null)) {
                this.reapplyTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreapplyTemplateOperationCompleted);
            }
            this.InvokeAsync("reapplyTemplate", new object[] {
                        templateId,
                        properties}, this.reapplyTemplateOperationCompleted, userState);
        }
        
        private void OnreapplyTemplateOperationCompleted(object arg) {
            if ((this.reapplyTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reapplyTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public long reassignIP6Address(long oldAddressId, string destination, string properties) {
            object[] results = this.Invoke("reassignIP6Address", new object[] {
                        oldAddressId,
                        destination,
                        properties});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void reassignIP6AddressAsync(long oldAddressId, string destination, string properties) {
            this.reassignIP6AddressAsync(oldAddressId, destination, properties, null);
        }
        
        /// <remarks/>
        public void reassignIP6AddressAsync(long oldAddressId, string destination, string properties, object userState) {
            if ((this.reassignIP6AddressOperationCompleted == null)) {
                this.reassignIP6AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreassignIP6AddressOperationCompleted);
            }
            this.InvokeAsync("reassignIP6Address", new object[] {
                        oldAddressId,
                        destination,
                        properties}, this.reassignIP6AddressOperationCompleted, userState);
        }
        
        private void OnreassignIP6AddressOperationCompleted(object arg) {
            if ((this.reassignIP6AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reassignIP6AddressCompleted(this, new reassignIP6AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void replaceServer(long serverId, string name, string defaultInterface, string hostName, string password, bool upgrade, string properties) {
            this.Invoke("replaceServer", new object[] {
                        serverId,
                        name,
                        defaultInterface,
                        hostName,
                        password,
                        upgrade,
                        properties});
        }
        
        /// <remarks/>
        public void replaceServerAsync(long serverId, string name, string defaultInterface, string hostName, string password, bool upgrade, string properties) {
            this.replaceServerAsync(serverId, name, defaultInterface, hostName, password, upgrade, properties, null);
        }
        
        /// <remarks/>
        public void replaceServerAsync(long serverId, string name, string defaultInterface, string hostName, string password, bool upgrade, string properties, object userState) {
            if ((this.replaceServerOperationCompleted == null)) {
                this.replaceServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceServerOperationCompleted);
            }
            this.InvokeAsync("replaceServer", new object[] {
                        serverId,
                        name,
                        defaultInterface,
                        hostName,
                        password,
                        upgrade,
                        properties}, this.replaceServerOperationCompleted, userState);
        }
        
        private void OnreplaceServerOperationCompleted(object arg) {
            if ((this.replaceServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void resizeRange(long objectId, string range, string options) {
            this.Invoke("resizeRange", new object[] {
                        objectId,
                        range,
                        options});
        }
        
        /// <remarks/>
        public void resizeRangeAsync(long objectId, string range, string options) {
            this.resizeRangeAsync(objectId, range, options, null);
        }
        
        /// <remarks/>
        public void resizeRangeAsync(long objectId, string range, string options, object userState) {
            if ((this.resizeRangeOperationCompleted == null)) {
                this.resizeRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresizeRangeOperationCompleted);
            }
            this.InvokeAsync("resizeRange", new object[] {
                        objectId,
                        range,
                        options}, this.resizeRangeOperationCompleted, userState);
        }
        
        private void OnresizeRangeOperationCompleted(object arg) {
            if ((this.resizeRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resizeRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] searchByCategory(string keyword, string category, int start, int count) {
            object[] results = this.Invoke("searchByCategory", new object[] {
                        keyword,
                        category,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByCategoryAsync(string keyword, string category, int start, int count) {
            this.searchByCategoryAsync(keyword, category, start, count, null);
        }
        
        /// <remarks/>
        public void searchByCategoryAsync(string keyword, string category, int start, int count, object userState) {
            if ((this.searchByCategoryOperationCompleted == null)) {
                this.searchByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByCategoryOperationCompleted);
            }
            this.InvokeAsync("searchByCategory", new object[] {
                        keyword,
                        category,
                        start,
                        count}, this.searchByCategoryOperationCompleted, userState);
        }
        
        private void OnsearchByCategoryOperationCompleted(object arg) {
            if ((this.searchByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByCategoryCompleted(this, new searchByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] searchByObjectTypes(string keyword, string types, int start, int count) {
            object[] results = this.Invoke("searchByObjectTypes", new object[] {
                        keyword,
                        types,
                        start,
                        count});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByObjectTypesAsync(string keyword, string types, int start, int count) {
            this.searchByObjectTypesAsync(keyword, types, start, count, null);
        }
        
        /// <remarks/>
        public void searchByObjectTypesAsync(string keyword, string types, int start, int count, object userState) {
            if ((this.searchByObjectTypesOperationCompleted == null)) {
                this.searchByObjectTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByObjectTypesOperationCompleted);
            }
            this.InvokeAsync("searchByObjectTypes", new object[] {
                        keyword,
                        types,
                        start,
                        count}, this.searchByObjectTypesOperationCompleted, userState);
        }
        
        private void OnsearchByObjectTypesOperationCompleted(object arg) {
            if ((this.searchByObjectTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByObjectTypesCompleted(this, new searchByObjectTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public APIEntity[] splitIP4Network(long networkId, int numberOfParts, string options) {
            object[] results = this.Invoke("splitIP4Network", new object[] {
                        networkId,
                        numberOfParts,
                        options});
            return ((APIEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void splitIP4NetworkAsync(long networkId, int numberOfParts, string options) {
            this.splitIP4NetworkAsync(networkId, numberOfParts, options, null);
        }
        
        /// <remarks/>
        public void splitIP4NetworkAsync(long networkId, int numberOfParts, string options, object userState) {
            if ((this.splitIP4NetworkOperationCompleted == null)) {
                this.splitIP4NetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsplitIP4NetworkOperationCompleted);
            }
            this.InvokeAsync("splitIP4Network", new object[] {
                        networkId,
                        numberOfParts,
                        options}, this.splitIP4NetworkOperationCompleted, userState);
        }
        
        private void OnsplitIP4NetworkOperationCompleted(object arg) {
            if ((this.splitIP4NetworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.splitIP4NetworkCompleted(this, new splitIP4NetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void tagEntity(long entityId, long tagId) {
            this.Invoke("tagEntity", new object[] {
                        entityId,
                        tagId});
        }
        
        /// <remarks/>
        public void tagEntityAsync(long entityId, long tagId) {
            this.tagEntityAsync(entityId, tagId, null);
        }
        
        /// <remarks/>
        public void tagEntityAsync(long entityId, long tagId, object userState) {
            if ((this.tagEntityOperationCompleted == null)) {
                this.tagEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OntagEntityOperationCompleted);
            }
            this.InvokeAsync("tagEntity", new object[] {
                        entityId,
                        tagId}, this.tagEntityOperationCompleted, userState);
        }
        
        private void OntagEntityOperationCompleted(object arg) {
            if ((this.tagEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tagEntityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void unlinkEntities(long entity1Id, long entity2Id, string properties) {
            this.Invoke("unlinkEntities", new object[] {
                        entity1Id,
                        entity2Id,
                        properties});
        }
        
        /// <remarks/>
        public void unlinkEntitiesAsync(long entity1Id, long entity2Id, string properties) {
            this.unlinkEntitiesAsync(entity1Id, entity2Id, properties, null);
        }
        
        /// <remarks/>
        public void unlinkEntitiesAsync(long entity1Id, long entity2Id, string properties, object userState) {
            if ((this.unlinkEntitiesOperationCompleted == null)) {
                this.unlinkEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunlinkEntitiesOperationCompleted);
            }
            this.InvokeAsync("unlinkEntities", new object[] {
                        entity1Id,
                        entity2Id,
                        properties}, this.unlinkEntitiesOperationCompleted, userState);
        }
        
        private void OnunlinkEntitiesOperationCompleted(object arg) {
            if ((this.unlinkEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unlinkEntitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void untagEntity(long entityId, long tagId) {
            this.Invoke("untagEntity", new object[] {
                        entityId,
                        tagId});
        }
        
        /// <remarks/>
        public void untagEntityAsync(long entityId, long tagId) {
            this.untagEntityAsync(entityId, tagId, null);
        }
        
        /// <remarks/>
        public void untagEntityAsync(long entityId, long tagId, object userState) {
            if ((this.untagEntityOperationCompleted == null)) {
                this.untagEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuntagEntityOperationCompleted);
            }
            this.InvokeAsync("untagEntity", new object[] {
                        entityId,
                        tagId}, this.untagEntityOperationCompleted, userState);
        }
        
        private void OnuntagEntityOperationCompleted(object arg) {
            if ((this.untagEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.untagEntityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void update(APIEntity entity) {
            this.Invoke("update", new object[] {
                        entity});
        }
        
        /// <remarks/>
        public void updateAsync(APIEntity entity) {
            this.updateAsync(entity, null);
        }
        
        /// <remarks/>
        public void updateAsync(APIEntity entity, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        entity}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateAccessRight(long entityId, long userId, string value, string overrides, string properties) {
            this.Invoke("updateAccessRight", new object[] {
                        entityId,
                        userId,
                        value,
                        overrides,
                        properties});
        }
        
        /// <remarks/>
        public void updateAccessRightAsync(long entityId, long userId, string value, string overrides, string properties) {
            this.updateAccessRightAsync(entityId, userId, value, overrides, properties, null);
        }
        
        /// <remarks/>
        public void updateAccessRightAsync(long entityId, long userId, string value, string overrides, string properties, object userState) {
            if ((this.updateAccessRightOperationCompleted == null)) {
                this.updateAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAccessRightOperationCompleted);
            }
            this.InvokeAsync("updateAccessRight", new object[] {
                        entityId,
                        userId,
                        value,
                        overrides,
                        properties}, this.updateAccessRightOperationCompleted, userState);
        }
        
        private void OnupdateAccessRightOperationCompleted(object arg) {
            if ((this.updateAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAccessRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary")]
        public byte[] updateBulkUdf([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string properties) {
            object[] results = this.Invoke("updateBulkUdf", new object[] {
                        data,
                        properties});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void updateBulkUdfAsync(byte[] data, string properties) {
            this.updateBulkUdfAsync(data, properties, null);
        }
        
        /// <remarks/>
        public void updateBulkUdfAsync(byte[] data, string properties, object userState) {
            if ((this.updateBulkUdfOperationCompleted == null)) {
                this.updateBulkUdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBulkUdfOperationCompleted);
            }
            this.InvokeAsync("updateBulkUdf", new object[] {
                        data,
                        properties}, this.updateBulkUdfOperationCompleted, userState);
        }
        
        private void OnupdateBulkUdfOperationCompleted(object arg) {
            if ((this.updateBulkUdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBulkUdfCompleted(this, new updateBulkUdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCP6ClientDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDHCP6ClientDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDHCP6ClientDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDHCP6ClientDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDHCP6ClientDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDHCP6ClientDeploymentOptionOperationCompleted == null)) {
                this.updateDHCP6ClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCP6ClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDHCP6ClientDeploymentOption", new object[] {
                        option}, this.updateDHCP6ClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDHCP6ClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDHCP6ClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCP6ClientDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCP6ServiceDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDHCP6ServiceDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDHCP6ServiceDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDHCP6ServiceDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDHCP6ServiceDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDHCP6ServiceDeploymentOptionOperationCompleted == null)) {
                this.updateDHCP6ServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCP6ServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDHCP6ServiceDeploymentOption", new object[] {
                        option}, this.updateDHCP6ServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDHCP6ServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDHCP6ServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCP6ServiceDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCPClientDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDHCPClientDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDHCPClientDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDHCPClientDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDHCPClientDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDHCPClientDeploymentOptionOperationCompleted == null)) {
                this.updateDHCPClientDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCPClientDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDHCPClientDeploymentOption", new object[] {
                        option}, this.updateDHCPClientDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDHCPClientDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDHCPClientDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCPClientDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCPDeploymentRole(APIDeploymentRole role) {
            this.Invoke("updateDHCPDeploymentRole", new object[] {
                        role});
        }
        
        /// <remarks/>
        public void updateDHCPDeploymentRoleAsync(APIDeploymentRole role) {
            this.updateDHCPDeploymentRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void updateDHCPDeploymentRoleAsync(APIDeploymentRole role, object userState) {
            if ((this.updateDHCPDeploymentRoleOperationCompleted == null)) {
                this.updateDHCPDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCPDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("updateDHCPDeploymentRole", new object[] {
                        role}, this.updateDHCPDeploymentRoleOperationCompleted, userState);
        }
        
        private void OnupdateDHCPDeploymentRoleOperationCompleted(object arg) {
            if ((this.updateDHCPDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCPDeploymentRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCPServiceDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDHCPServiceDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDHCPServiceDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDHCPServiceDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDHCPServiceDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDHCPServiceDeploymentOptionOperationCompleted == null)) {
                this.updateDHCPServiceDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCPServiceDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDHCPServiceDeploymentOption", new object[] {
                        option}, this.updateDHCPServiceDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDHCPServiceDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDHCPServiceDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCPServiceDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDHCPVendorDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDHCPVendorDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDHCPVendorDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDHCPVendorDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDHCPVendorDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDHCPVendorDeploymentOptionOperationCompleted == null)) {
                this.updateDHCPVendorDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDHCPVendorDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDHCPVendorDeploymentOption", new object[] {
                        option}, this.updateDHCPVendorDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDHCPVendorDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDHCPVendorDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDHCPVendorDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDNSDeploymentOption(APIDeploymentOption option) {
            this.Invoke("updateDNSDeploymentOption", new object[] {
                        option});
        }
        
        /// <remarks/>
        public void updateDNSDeploymentOptionAsync(APIDeploymentOption option) {
            this.updateDNSDeploymentOptionAsync(option, null);
        }
        
        /// <remarks/>
        public void updateDNSDeploymentOptionAsync(APIDeploymentOption option, object userState) {
            if ((this.updateDNSDeploymentOptionOperationCompleted == null)) {
                this.updateDNSDeploymentOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDNSDeploymentOptionOperationCompleted);
            }
            this.InvokeAsync("updateDNSDeploymentOption", new object[] {
                        option}, this.updateDNSDeploymentOptionOperationCompleted, userState);
        }
        
        private void OnupdateDNSDeploymentOptionOperationCompleted(object arg) {
            if ((this.updateDNSDeploymentOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDNSDeploymentOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateDNSDeploymentRole(APIDeploymentRole role) {
            this.Invoke("updateDNSDeploymentRole", new object[] {
                        role});
        }
        
        /// <remarks/>
        public void updateDNSDeploymentRoleAsync(APIDeploymentRole role) {
            this.updateDNSDeploymentRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void updateDNSDeploymentRoleAsync(APIDeploymentRole role, object userState) {
            if ((this.updateDNSDeploymentRoleOperationCompleted == null)) {
                this.updateDNSDeploymentRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDNSDeploymentRoleOperationCompleted);
            }
            this.InvokeAsync("updateDNSDeploymentRole", new object[] {
                        role}, this.updateDNSDeploymentRoleOperationCompleted, userState);
        }
        
        private void OnupdateDNSDeploymentRoleOperationCompleted(object arg) {
            if ((this.updateDNSDeploymentRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDNSDeploymentRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateWithOptions(APIEntity entity, string options) {
            this.Invoke("updateWithOptions", new object[] {
                        entity,
                        options});
        }
        
        /// <remarks/>
        public void updateWithOptionsAsync(APIEntity entity, string options) {
            this.updateWithOptionsAsync(entity, options, null);
        }
        
        /// <remarks/>
        public void updateWithOptionsAsync(APIEntity entity, string options, object userState) {
            if ((this.updateWithOptionsOperationCompleted == null)) {
                this.updateWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWithOptionsOperationCompleted);
            }
            this.InvokeAsync("updateWithOptions", new object[] {
                        entity,
                        options}, this.updateWithOptionsOperationCompleted, userState);
        }
        
        private void OnupdateWithOptionsOperationCompleted(object arg) {
            if ((this.updateWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWithOptionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://api.proteus.bluecatnetworks.com", ResponseNamespace="http://api.proteus.bluecatnetworks.com", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void uploadResponsePolicyItems(long parentId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            this.Invoke("uploadResponsePolicyItems", new object[] {
                        parentId,
                        data});
        }
        
        /// <remarks/>
        public void uploadResponsePolicyItemsAsync(long parentId, byte[] data) {
            this.uploadResponsePolicyItemsAsync(parentId, data, null);
        }
        
        /// <remarks/>
        public void uploadResponsePolicyItemsAsync(long parentId, byte[] data, object userState) {
            if ((this.uploadResponsePolicyItemsOperationCompleted == null)) {
                this.uploadResponsePolicyItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadResponsePolicyItemsOperationCompleted);
            }
            this.InvokeAsync("uploadResponsePolicyItems", new object[] {
                        parentId,
                        data}, this.uploadResponsePolicyItemsOperationCompleted, userState);
        }
        
        private void OnuploadResponsePolicyItemsOperationCompleted(object arg) {
            if ((this.uploadResponsePolicyItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadResponsePolicyItemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class APIEntity {
        
        private long idField;
        
        private string nameField;
        
        private string propertiesField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class APIUserDefinedField {
        
        private string defaultValueField;
        
        private string displayNameField;
        
        private bool hideFromSearchField;
        
        private string nameField;
        
        private string predefinedValuesField;
        
        private bool renderAsRadioButtonField;
        
        private bool requiredField;
        
        private string typeField;
        
        private string validatorPropertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hideFromSearch {
            get {
                return this.hideFromSearchField;
            }
            set {
                this.hideFromSearchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string predefinedValues {
            get {
                return this.predefinedValuesField;
            }
            set {
                this.predefinedValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool renderAsRadioButton {
            get {
                return this.renderAsRadioButtonField;
            }
            set {
                this.renderAsRadioButtonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string validatorProperties {
            get {
                return this.validatorPropertiesField;
            }
            set {
                this.validatorPropertiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class APIDeploymentRole {
        
        private long entityIdField;
        
        private long idField;
        
        private string propertiesField;
        
        private long serverInterfaceIdField;
        
        private string serviceField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long entityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long serverInterfaceId {
            get {
                return this.serverInterfaceIdField;
            }
            set {
                this.serverInterfaceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class APIDeploymentOption {
        
        private long idField;
        
        private string nameField;
        
        private string propertiesField;
        
        private string typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.proteus.bluecatnetworks.com")]
    public partial class APIAccessRight {
        
        private long entityIdField;
        
        private string overridesField;
        
        private string propertiesField;
        
        private long userIdField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long entityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string overrides {
            get {
                return this.overridesField;
            }
            set {
                this.overridesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addACLCompletedEventHandler(object sender, addACLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addACLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addACLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addAccessRightCompletedEventHandler(object sender, addAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addAliasRecordCompletedEventHandler(object sender, addAliasRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAliasRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAliasRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addBulkHostRecordCompletedEventHandler(object sender, addBulkHostRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBulkHostRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBulkHostRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addCustomOptionDefinitionCompletedEventHandler(object sender, addCustomOptionDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomOptionDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomOptionDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCP4RangeCompletedEventHandler(object sender, addDHCP4RangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCP4RangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCP4RangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCP4RangeBySizeCompletedEventHandler(object sender, addDHCP4RangeBySizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCP4RangeBySizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCP4RangeBySizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCP6ClientDeploymentOptionCompletedEventHandler(object sender, addDHCP6ClientDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCP6ClientDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCP6ClientDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCP6RangeCompletedEventHandler(object sender, addDHCP6RangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCP6RangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCP6RangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCP6ServiceDeploymentOptionCompletedEventHandler(object sender, addDHCP6ServiceDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCP6ServiceDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCP6ServiceDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPClientDeploymentOptionCompletedEventHandler(object sender, addDHCPClientDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPClientDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPClientDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPDeploymentRoleCompletedEventHandler(object sender, addDHCPDeploymentRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPDeploymentRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPDeploymentRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPMatchClassCompletedEventHandler(object sender, addDHCPMatchClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPMatchClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPMatchClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPServiceDeploymentOptionCompletedEventHandler(object sender, addDHCPServiceDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPServiceDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPServiceDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPSubClassCompletedEventHandler(object sender, addDHCPSubClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPSubClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPSubClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDHCPVendorDeploymentOptionCompletedEventHandler(object sender, addDHCPVendorDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDHCPVendorDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDHCPVendorDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDNSDeploymentOptionCompletedEventHandler(object sender, addDNSDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDNSDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDNSDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDNSDeploymentRoleCompletedEventHandler(object sender, addDNSDeploymentRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDNSDeploymentRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDNSDeploymentRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDeviceCompletedEventHandler(object sender, addDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDeviceInstanceCompletedEventHandler(object sender, addDeviceInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDeviceInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDeviceInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDeviceSubtypeCompletedEventHandler(object sender, addDeviceSubtypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDeviceSubtypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDeviceSubtypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addDeviceTypeCompletedEventHandler(object sender, addDeviceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDeviceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDeviceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addEntityCompletedEventHandler(object sender, addEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addEnumNumberCompletedEventHandler(object sender, addEnumNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addEnumNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addEnumNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addEnumZoneCompletedEventHandler(object sender, addEnumZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addEnumZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addEnumZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addExternalHostRecordCompletedEventHandler(object sender, addExternalHostRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addExternalHostRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addExternalHostRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addGenericRecordCompletedEventHandler(object sender, addGenericRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGenericRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addGenericRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addHINFORecordCompletedEventHandler(object sender, addHINFORecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addHINFORecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addHINFORecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addHostRecordCompletedEventHandler(object sender, addHostRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addHostRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addHostRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4BlockByCIDRCompletedEventHandler(object sender, addIP4BlockByCIDRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4BlockByCIDRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4BlockByCIDRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4BlockByRangeCompletedEventHandler(object sender, addIP4BlockByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4BlockByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4BlockByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4IPGroupByRangeCompletedEventHandler(object sender, addIP4IPGroupByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4IPGroupByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4IPGroupByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4IPGroupBySizeCompletedEventHandler(object sender, addIP4IPGroupBySizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4IPGroupBySizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4IPGroupBySizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4NetworkCompletedEventHandler(object sender, addIP4NetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4NetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4NetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4NetworkTemplateCompletedEventHandler(object sender, addIP4NetworkTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4NetworkTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4NetworkTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP4ReconciliationPolicyCompletedEventHandler(object sender, addIP4ReconciliationPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP4ReconciliationPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP4ReconciliationPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP6AddressCompletedEventHandler(object sender, addIP6AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP6AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP6AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP6BlockByMACAddressCompletedEventHandler(object sender, addIP6BlockByMACAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP6BlockByMACAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP6BlockByMACAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP6BlockByPrefixCompletedEventHandler(object sender, addIP6BlockByPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP6BlockByPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP6BlockByPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addIP6NetworkByPrefixCompletedEventHandler(object sender, addIP6NetworkByPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addIP6NetworkByPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addIP6NetworkByPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addMACAddressCompletedEventHandler(object sender, addMACAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMACAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMACAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addMXRecordCompletedEventHandler(object sender, addMXRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMXRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMXRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addNAPTRRecordCompletedEventHandler(object sender, addNAPTRRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNAPTRRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNAPTRRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addParentBlockCompletedEventHandler(object sender, addParentBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addParentBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addParentBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addParentBlockWithPropertiesCompletedEventHandler(object sender, addParentBlockWithPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addParentBlockWithPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addParentBlockWithPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addResourceRecordCompletedEventHandler(object sender, addResourceRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addResourceRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addResourceRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addResponsePolicyCompletedEventHandler(object sender, addResponsePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addResponsePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addResponsePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addSRVRecordCompletedEventHandler(object sender, addSRVRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSRVRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSRVRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addServerCompletedEventHandler(object sender, addServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addStartOfAuthorityCompletedEventHandler(object sender, addStartOfAuthorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStartOfAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStartOfAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTFTPDeploymentRoleCompletedEventHandler(object sender, addTFTPDeploymentRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTFTPDeploymentRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTFTPDeploymentRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTFTPFileCompletedEventHandler(object sender, addTFTPFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTFTPFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTFTPFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTFTPFolderCompletedEventHandler(object sender, addTFTPFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTFTPFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTFTPFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTFTPGroupCompletedEventHandler(object sender, addTFTPGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTFTPGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTFTPGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTXTRecordCompletedEventHandler(object sender, addTXTRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTXTRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTXTRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTagCompletedEventHandler(object sender, addTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addTagGroupCompletedEventHandler(object sender, addTagGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTagGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTagGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addUserCompletedEventHandler(object sender, addUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addUserGroupCompletedEventHandler(object sender, addUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addVendorOptionDefinitionCompletedEventHandler(object sender, addVendorOptionDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addVendorOptionDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addVendorOptionDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addVendorProfileCompletedEventHandler(object sender, addVendorProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addVendorProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addVendorProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addViewCompletedEventHandler(object sender, addViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addZoneCompletedEventHandler(object sender, addZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addZoneTemplateCompletedEventHandler(object sender, addZoneTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addZoneTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addZoneTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void assignIP4AddressCompletedEventHandler(object sender, assignIP4AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignIP4AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignIP4AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void assignIP6AddressCompletedEventHandler(object sender, assignIP6AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignIP6AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignIP6AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void assignNextAvailableIP4AddressCompletedEventHandler(object sender, assignNextAvailableIP4AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignNextAvailableIP4AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignNextAvailableIP4AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void assignOrUpdateTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void associateMACAddressWithPoolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void breakXHAPairCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void changeStateIP4AddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void clearIP6AddressCompletedEventHandler(object sender, clearIP6AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearIP6AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearIP6AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void configureReplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createXHAPairCompletedEventHandler(object sender, createXHAPairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createXHAPairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createXHAPairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteAccessRightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCP6ClientDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCP6ServiceDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCPClientDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCPDeploymentRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCPServiceDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDHCPVendorDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDNSDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDNSDeploymentRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDNSDeploymentRoleForViewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteDeviceInstanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteWithOptionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void denyMACAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deployServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deployServerConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deployServerServicesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void editXHAPairCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void failoverXHACompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccessRightCompletedEventHandler(object sender, getAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIAccessRight Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIAccessRight)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccessRightsForEntityCompletedEventHandler(object sender, getAccessRightsForEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessRightsForEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessRightsForEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIAccessRight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIAccessRight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccessRightsForUserCompletedEventHandler(object sender, getAccessRightsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessRightsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessRightsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIAccessRight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIAccessRight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAliasesByHintCompletedEventHandler(object sender, getAliasesByHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAliasesByHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAliasesByHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCP6ClientDeploymentOptionCompletedEventHandler(object sender, getDHCP6ClientDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCP6ClientDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCP6ClientDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCP6ServiceDeploymentOptionCompletedEventHandler(object sender, getDHCP6ServiceDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCP6ServiceDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCP6ServiceDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCPClientDeploymentOptionCompletedEventHandler(object sender, getDHCPClientDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCPClientDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCPClientDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCPDeploymentRoleCompletedEventHandler(object sender, getDHCPDeploymentRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCPDeploymentRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCPDeploymentRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentRole Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentRole)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCPServiceDeploymentOptionCompletedEventHandler(object sender, getDHCPServiceDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCPServiceDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCPServiceDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDHCPVendorDeploymentOptionCompletedEventHandler(object sender, getDHCPVendorDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDHCPVendorDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDHCPVendorDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDNSDeploymentOptionCompletedEventHandler(object sender, getDNSDeploymentOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSDeploymentOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSDeploymentOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDNSDeploymentRoleCompletedEventHandler(object sender, getDNSDeploymentRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSDeploymentRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSDeploymentRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentRole Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentRole)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDNSDeploymentRoleForViewCompletedEventHandler(object sender, getDNSDeploymentRoleForViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDNSDeploymentRoleForViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDNSDeploymentRoleForViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentRole Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentRole)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDependentRecordsCompletedEventHandler(object sender, getDependentRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDependentRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDependentRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDeploymentOptionsCompletedEventHandler(object sender, getDeploymentOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeploymentOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeploymentOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentOption[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentOption[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDeploymentRolesCompletedEventHandler(object sender, getDeploymentRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeploymentRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeploymentRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentRole[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentRole[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntitiesCompletedEventHandler(object sender, getEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntitiesByNameCompletedEventHandler(object sender, getEntitiesByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntitiesByNameUsingOptionsCompletedEventHandler(object sender, getEntitiesByNameUsingOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesByNameUsingOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesByNameUsingOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntityByCIDRCompletedEventHandler(object sender, getEntityByCIDRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityByCIDRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityByCIDRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntityByIdCompletedEventHandler(object sender, getEntityByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntityByNameCompletedEventHandler(object sender, getEntityByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntityByPrefixCompletedEventHandler(object sender, getEntityByPrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityByPrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityByPrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEntityByRangeCompletedEventHandler(object sender, getEntityByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getHostRecordsByHintCompletedEventHandler(object sender, getHostRecordsByHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHostRecordsByHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHostRecordsByHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getIP4AddressCompletedEventHandler(object sender, getIP4AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIP4AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIP4AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getIP4NetworksByHintCompletedEventHandler(object sender, getIP4NetworksByHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIP4NetworksByHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIP4NetworksByHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getIP6AddressCompletedEventHandler(object sender, getIP6AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIP6AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIP6AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getIPRangedByIPCompletedEventHandler(object sender, getIPRangedByIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIPRangedByIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIPRangedByIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getKSKCompletedEventHandler(object sender, getKSKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKSKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKSKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getLinkedEntitiesCompletedEventHandler(object sender, getLinkedEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLinkedEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLinkedEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMACAddressCompletedEventHandler(object sender, getMACAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMACAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMACAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMACAddressesInPoolCompletedEventHandler(object sender, getMACAddressesInPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMACAddressesInPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMACAddressesInPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMaxAllowedRangeCompletedEventHandler(object sender, getMaxAllowedRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMaxAllowedRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMaxAllowedRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNetworkLinkedPropertiesCompletedEventHandler(object sender, getNetworkLinkedPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNetworkLinkedPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNetworkLinkedPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNextAvailableIP4AddressCompletedEventHandler(object sender, getNextAvailableIP4AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextAvailableIP4AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextAvailableIP4AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNextAvailableIP4NetworkCompletedEventHandler(object sender, getNextAvailableIP4NetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextAvailableIP4NetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextAvailableIP4NetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNextAvailableIPRangeCompletedEventHandler(object sender, getNextAvailableIPRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextAvailableIPRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextAvailableIPRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNextAvailableIPRangesCompletedEventHandler(object sender, getNextAvailableIPRangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextAvailableIPRangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextAvailableIPRangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNextIP4AddressCompletedEventHandler(object sender, getNextIP4AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextIP4AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextIP4AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getParentCompletedEventHandler(object sender, getParentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getServerDeploymentRolesCompletedEventHandler(object sender, getServerDeploymentRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerDeploymentRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerDeploymentRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIDeploymentRole[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIDeploymentRole[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getServerDeploymentStatusCompletedEventHandler(object sender, getServerDeploymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerDeploymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerDeploymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getServerForRoleCompletedEventHandler(object sender, getServerForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSystemInfoCompletedEventHandler(object sender, getSystemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUserDefinedFieldsCompletedEventHandler(object sender, getUserDefinedFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDefinedFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDefinedFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIUserDefinedField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIUserDefinedField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getZonesByHintCompletedEventHandler(object sender, getZonesByHintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZonesByHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZonesByHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void importServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void isAddressAllocatedCompletedEventHandler(object sender, isAddressAllocatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAddressAllocatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAddressAllocatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void isMigrationRunningCompletedEventHandler(object sender, isMigrationRunningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isMigrationRunningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isMigrationRunningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void linkEntitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void loginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void mergeBlocksWithParentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void mergeSelectedBlocksOrNetworksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void migrateFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveDeploymentRolesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveIP4ObjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveIPObjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveResourceRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void quickDeployCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void reapplyTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void reassignIP6AddressCompletedEventHandler(object sender, reassignIP6AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reassignIP6AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reassignIP6AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void replaceServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void resizeRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchByCategoryCompletedEventHandler(object sender, searchByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchByObjectTypesCompletedEventHandler(object sender, searchByObjectTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByObjectTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByObjectTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void splitIP4NetworkCompletedEventHandler(object sender, splitIP4NetworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class splitIP4NetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal splitIP4NetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public APIEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((APIEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void tagEntityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void unlinkEntitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void untagEntityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateAccessRightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateBulkUdfCompletedEventHandler(object sender, updateBulkUdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBulkUdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBulkUdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCP6ClientDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCP6ServiceDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCPClientDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCPDeploymentRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCPServiceDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDHCPVendorDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDNSDeploymentOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateDNSDeploymentRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateWithOptionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void uploadResponsePolicyItemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591